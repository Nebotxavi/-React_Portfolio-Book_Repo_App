{"ast":null,"code":"import _objectSpread from \"/home/balaclava/Desktop/Javascript/react/100daysCode/01-Book_system/front_book_repo/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/balaclava/Desktop/Javascript/react/100daysCode/01-Book_system/front_book_repo/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/balaclava/Desktop/Javascript/react/100daysCode/01-Book_system/front_book_repo/src/components/bookForm.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { getBook } from \"../services/booksService\";\nimport { getGenres } from \"../services/genresService\";\n\nconst BookForm = ({\n  match: item\n}) => {\n  const _useState = useState({\n    title: \"\",\n    firstName: \"\",\n    secondName: \"\",\n    rate: \"\",\n    genreName: \"\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        book = _useState2[0],\n        setBook = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        genres = _useState4[0],\n        setGenres = _useState4[1];\n\n  console.log(genres);\n  const checking = genres.filter(genre => genre.name === book.genreName);\n  console.log(\"filter\", checking);\n  useEffect(() => {\n    let shouldIgnore = false;\n\n    async function fetchGenres() {\n      const genres = await getGenres();\n      if (!shouldIgnore) setGenres(genres);\n    }\n\n    const id = item.params.id;\n    if (id === \"new\") return;\n\n    async function fetchBook() {\n      const book = await getBook(id);\n      if (!shouldIgnore) setBook(mapToState(book));\n    }\n\n    fetchGenres();\n    fetchBook();\n    return () => {\n      shouldIgnore = true;\n    };\n  }, [item]);\n\n  function mapToState(book) {\n    return {\n      title: book.title,\n      firstName: book.author_first_name,\n      secondName: book.author_second_name,\n      rate: book.rate,\n      genre: book.genre\n    };\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n  }\n\n  return React.createElement(\"form\", {\n    onSubmit: e => handleSubmit(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"input-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Title\"), React.createElement(\"input\", {\n    id: \"input-title\",\n    type: \"text\",\n    className: \"form-control\",\n    value: book.title,\n    onChange: e => setBook(_objectSpread({}, book, {\n      title: e.currentTarget.value\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"input-name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Author name\"), React.createElement(\"input\", {\n    id: \"input-name\",\n    type: \"text\",\n    className: \"form-control\",\n    value: book.firstName,\n    onChange: e => setBook(_objectSpread({}, book, {\n      firstName: e.currentTarget.value\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Save\"));\n};\n\nexport default BookForm;","map":{"version":3,"sources":["/home/balaclava/Desktop/Javascript/react/100daysCode/01-Book_system/front_book_repo/src/components/bookForm.jsx"],"names":["React","useEffect","useState","getBook","getGenres","BookForm","match","item","title","firstName","secondName","rate","genreName","book","setBook","genres","setGenres","console","log","checking","filter","genre","name","shouldIgnore","fetchGenres","id","params","fetchBook","mapToState","author_first_name","author_second_name","handleSubmit","e","preventDefault","currentTarget","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,0BAAxB;AACA,SAASC,SAAT,QAA0B,2BAA1B;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,KAAK,EAAEC;AAAT,CAAD,KAAqB;AAAA,oBACZL,QAAQ,CAAC;AAC/BM,IAAAA,KAAK,EAAE,EADwB;AAE/BC,IAAAA,SAAS,EAAE,EAFoB;AAG/BC,IAAAA,UAAU,EAAE,EAHmB;AAI/BC,IAAAA,IAAI,EAAE,EAJyB;AAK/BC,IAAAA,SAAS,EAAE;AALoB,GAAD,CADI;AAAA;AAAA,QAC7BC,IAD6B;AAAA,QACvBC,OADuB;;AAAA,qBAQRZ,QAAQ,CAAC,EAAD,CARA;AAAA;AAAA,QAQ7Ba,MAR6B;AAAA,QAQrBC,SARqB;;AAUpCC,EAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACA,QAAMI,QAAQ,GAAGJ,MAAM,CAACK,MAAP,CAAcC,KAAK,IAAIA,KAAK,CAACC,IAAN,KAAeT,IAAI,CAACD,SAA3C,CAAjB;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBC,QAAtB;AAEAlB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIsB,YAAY,GAAG,KAAnB;;AAEA,mBAAeC,WAAf,GAA6B;AAC3B,YAAMT,MAAM,GAAG,MAAMX,SAAS,EAA9B;AACA,UAAI,CAACmB,YAAL,EAAmBP,SAAS,CAACD,MAAD,CAAT;AACpB;;AAED,UAAMU,EAAE,GAAGlB,IAAI,CAACmB,MAAL,CAAYD,EAAvB;AACA,QAAIA,EAAE,KAAK,KAAX,EAAkB;;AAClB,mBAAeE,SAAf,GAA2B;AACzB,YAAMd,IAAI,GAAG,MAAMV,OAAO,CAACsB,EAAD,CAA1B;AACA,UAAI,CAACF,YAAL,EAAmBT,OAAO,CAACc,UAAU,CAACf,IAAD,CAAX,CAAP;AACpB;;AACDW,IAAAA,WAAW;AACXG,IAAAA,SAAS;AACT,WAAO,MAAM;AACXJ,MAAAA,YAAY,GAAG,IAAf;AACD,KAFD;AAGD,GAnBQ,EAmBN,CAAChB,IAAD,CAnBM,CAAT;;AAqBA,WAASqB,UAAT,CAAoBf,IAApB,EAA0B;AACxB,WAAO;AACLL,MAAAA,KAAK,EAAEK,IAAI,CAACL,KADP;AAELC,MAAAA,SAAS,EAAEI,IAAI,CAACgB,iBAFX;AAGLnB,MAAAA,UAAU,EAAEG,IAAI,CAACiB,kBAHZ;AAILnB,MAAAA,IAAI,EAAEE,IAAI,CAACF,IAJN;AAKLU,MAAAA,KAAK,EAAER,IAAI,CAACQ;AALP,KAAP;AAOD;;AAED,WAASU,YAAT,CAAsBC,CAAtB,EAAyB;AACvBA,IAAAA,CAAC,CAACC,cAAF;AACD;;AAED,SACE;AAAM,IAAA,QAAQ,EAAED,CAAC,IAAID,YAAY,CAACC,CAAD,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AACE,IAAA,EAAE,EAAC,aADL;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,SAAS,EAAC,cAHZ;AAIE,IAAA,KAAK,EAAEnB,IAAI,CAACL,KAJd;AAKE,IAAA,QAAQ,EAAEwB,CAAC,IAAIlB,OAAO,mBAAMD,IAAN;AAAYL,MAAAA,KAAK,EAAEwB,CAAC,CAACE,aAAF,CAAgBC;AAAnC,OALxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAWE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE;AACE,IAAA,EAAE,EAAC,YADL;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,SAAS,EAAC,cAHZ;AAIE,IAAA,KAAK,EAAEtB,IAAI,CAACJ,SAJd;AAKE,IAAA,QAAQ,EAAEuB,CAAC,IAAIlB,OAAO,mBAAMD,IAAN;AAAYJ,MAAAA,SAAS,EAAEuB,CAAC,CAACE,aAAF,CAAgBC;AAAvC,OALxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAXF,EAqBE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,iBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YArBF,CADF;AA2BD,CA5ED;;AA8EA,eAAe9B,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { getBook } from \"../services/booksService\";\nimport { getGenres } from \"../services/genresService\";\n\nconst BookForm = ({ match: item }) => {\n  const [book, setBook] = useState({\n    title: \"\",\n    firstName: \"\",\n    secondName: \"\",\n    rate: \"\",\n    genreName: \"\"\n  });\n  const [genres, setGenres] = useState([]);\n\n  console.log(genres);\n  const checking = genres.filter(genre => genre.name === book.genreName);\n  console.log(\"filter\", checking);\n\n  useEffect(() => {\n    let shouldIgnore = false;\n\n    async function fetchGenres() {\n      const genres = await getGenres();\n      if (!shouldIgnore) setGenres(genres);\n    }\n\n    const id = item.params.id;\n    if (id === \"new\") return;\n    async function fetchBook() {\n      const book = await getBook(id);\n      if (!shouldIgnore) setBook(mapToState(book));\n    }\n    fetchGenres();\n    fetchBook();\n    return () => {\n      shouldIgnore = true;\n    };\n  }, [item]);\n\n  function mapToState(book) {\n    return {\n      title: book.title,\n      firstName: book.author_first_name,\n      secondName: book.author_second_name,\n      rate: book.rate,\n      genre: book.genre\n    };\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n  }\n\n  return (\n    <form onSubmit={e => handleSubmit(e)}>\n      <div className=\"form-group\">\n        <label htmlFor=\"input-title\">Title</label>\n        <input\n          id=\"input-title\"\n          type=\"text\"\n          className=\"form-control\"\n          value={book.title}\n          onChange={e => setBook({ ...book, title: e.currentTarget.value })}\n        />\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"input-name\">Author name</label>\n        <input\n          id=\"input-name\"\n          type=\"text\"\n          className=\"form-control\"\n          value={book.firstName}\n          onChange={e => setBook({ ...book, firstName: e.currentTarget.value })}\n        />\n      </div>\n      <button type=\"submit\" className=\"btn btn-primary\">\n        Save\n      </button>\n    </form>\n  );\n};\n\nexport default BookForm;\n"]},"metadata":{},"sourceType":"module"}