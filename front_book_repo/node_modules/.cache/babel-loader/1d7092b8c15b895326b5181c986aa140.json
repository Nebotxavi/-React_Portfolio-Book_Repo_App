{"ast":null,"code":"import _objectSpread from \"/home/balaclava/Desktop/Javascript/react/100daysCode/01-Book_system/front_book_repo/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/balaclava/Desktop/Javascript/react/100daysCode/01-Book_system/front_book_repo/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/balaclava/Desktop/Javascript/react/100daysCode/01-Book_system/front_book_repo/src/components/bookForm.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport Joi from \"joi-browser\";\nimport { Redirect } from \"react-router-dom\";\nimport Loader from \"react-loader-spinner\";\nimport { getBook, updateBook, saveBook } from \"../services/booksService\";\nimport { getGenres } from \"../services/genresService\";\nimport Form from \"./common/form\";\n\nconst BookForm = ({\n  history,\n  match: itemRef\n}) => {\n  const _useState = useState({\n    title: \"\",\n    author_first_name: \"\",\n    author_second_name: \"\",\n    rate: \"\",\n    genre: \"\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        book = _useState2[0],\n        setBook = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        genres = _useState4[0],\n        setGenres = _useState4[1];\n\n  const _useState5 = useState({}),\n        _useState6 = _slicedToArray(_useState5, 2),\n        errors = _useState6[0],\n        setErrors = _useState6[1];\n\n  const urlId = itemRef.params.id;\n  const isNew = urlId === \"new\" ? true : false;\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        isExpired = _useState8[0],\n        setIsExpired = _useState8[1];\n\n  const inputList = [{\n    name: \"title\",\n    label: \"Title\",\n    value: book.title,\n    element: \"Input\"\n  }, {\n    name: \"author_first_name\",\n    label: \"Name\",\n    value: book.author_first_name,\n    element: \"Input\"\n  }, {\n    name: \"author_second_name\",\n    label: \"Second Name\",\n    value: book.author_second_name,\n    element: \"Input\"\n  }, {\n    name: \"rate\",\n    label: \"Rate\",\n    value: book.rate,\n    element: \"Input\"\n  }, {\n    name: \"genre\",\n    label: \"Genre\",\n    value: book.genre,\n    element: \"Select\"\n  }, {\n    label: \"Save\",\n    element: \"Button\"\n  }];\n  useEffect(() => {\n    let shouldIgnore = false;\n\n    async function fetchGenres() {\n      try {\n        const genres = await getGenres();\n        if (!shouldIgnore) setGenres(genres);\n      } catch (ex) {\n        if (ex.response && ex.response.status === 401) setIsExpired(true);\n      }\n    }\n\n    async function fetchBook() {\n      try {\n        const book = await getBook(urlId);\n        if (!shouldIgnore) setBook(mapToState(book));\n      } catch (ex) {\n        if (ex.response && ex.response.status === 401) setIsExpired(true);\n      }\n    }\n\n    fetchGenres();\n    if (!isNew) fetchBook();\n    return () => {\n      shouldIgnore = true;\n    };\n  }, [isNew, urlId]);\n  if (isExpired) return React.createElement(Redirect, {\n    to: \"/logout\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  });\n\n  function mapToState(book) {\n    return {\n      id: book.id,\n      title: book.title,\n      author_first_name: book.author_first_name,\n      author_second_name: book.author_second_name,\n      rate: book.rate,\n      genre: book.genre\n    };\n  }\n\n  const schema = {\n    id: Joi.number(),\n    title: Joi.string().required().label(\"Title\"),\n    author_first_name: Joi.string().allow(\"\"),\n    author_second_name: Joi.string().allow(\"\"),\n    rate: Joi.number().min(1).max(10).required(),\n    genre: Joi.string().required()\n  };\n\n  function mapToFetchApi() {\n    const genreId = genres.filter(genre => genre.name === book.genre).map(genre => genre.id)[0];\n    return _objectSpread({}, book, {\n      genre: genreId\n    });\n  }\n\n  async function doSubmit() {\n    try {\n      const mappedBook = mapToFetchApi();\n      if (!isNew) await updateBook(book.id, mappedBook);else await saveBook(mappedBook);\n      history.push(\"/\");\n    } catch (ex) {\n      if (ex.response && ex.response.status === 401) setIsExpired(true);\n    }\n  }\n\n  const loaderStyle = {\n    position: \"absolute\",\n    textAlign: \"center\",\n    width: \"100%\",\n    top: \"20%\"\n  };\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(Loader, {\n    type: \"Circles\",\n    color: \"#00BFFF\",\n    height: 100,\n    width: 100,\n    timeout: 1500 //3 secs\n    ,\n    style: loaderStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }), React.createElement(Form, {\n    inputList: inputList,\n    data: book,\n    setData: setBook,\n    errors: errors,\n    setErrors: setErrors,\n    genres: genres,\n    schema: schema,\n    doSubmit: doSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }));\n};\n\nexport default BookForm;","map":{"version":3,"sources":["/home/balaclava/Desktop/Javascript/react/100daysCode/01-Book_system/front_book_repo/src/components/bookForm.jsx"],"names":["React","useEffect","useState","Joi","Redirect","Loader","getBook","updateBook","saveBook","getGenres","Form","BookForm","history","match","itemRef","title","author_first_name","author_second_name","rate","genre","book","setBook","genres","setGenres","errors","setErrors","urlId","params","id","isNew","isExpired","setIsExpired","inputList","name","label","value","element","shouldIgnore","fetchGenres","ex","response","status","fetchBook","mapToState","schema","number","string","required","allow","min","max","mapToFetchApi","genreId","filter","map","doSubmit","mappedBook","push","loaderStyle","position","textAlign","width","top"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,SAASC,OAAT,EAAkBC,UAAlB,EAA8BC,QAA9B,QAA8C,0BAA9C;AACA,SAASC,SAAT,QAA0B,2BAA1B;AACA,OAAOC,IAAP,MAAiB,eAAjB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,KAAK,EAAEC;AAAlB,CAAD,KAAiC;AAAA,oBACxBZ,QAAQ,CAAC;AAC/Ba,IAAAA,KAAK,EAAE,EADwB;AAE/BC,IAAAA,iBAAiB,EAAE,EAFY;AAG/BC,IAAAA,kBAAkB,EAAE,EAHW;AAI/BC,IAAAA,IAAI,EAAE,EAJyB;AAK/BC,IAAAA,KAAK,EAAE;AALwB,GAAD,CADgB;AAAA;AAAA,QACzCC,IADyC;AAAA,QACnCC,OADmC;;AAAA,qBAQpBnB,QAAQ,CAAC,EAAD,CARY;AAAA;AAAA,QAQzCoB,MARyC;AAAA,QAQjCC,SARiC;;AAAA,qBASpBrB,QAAQ,CAAC,EAAD,CATY;AAAA;AAAA,QASzCsB,MATyC;AAAA,QASjCC,SATiC;;AAUhD,QAAMC,KAAK,GAAGZ,OAAO,CAACa,MAAR,CAAeC,EAA7B;AACA,QAAMC,KAAK,GAAGH,KAAK,KAAK,KAAV,GAAkB,IAAlB,GAAyB,KAAvC;;AAXgD,qBAYdxB,QAAQ,CAAC,KAAD,CAZM;AAAA;AAAA,QAYzC4B,SAZyC;AAAA,QAY9BC,YAZ8B;;AAchD,QAAMC,SAAS,GAAG,CAChB;AAAEC,IAAAA,IAAI,EAAE,OAAR;AAAiBC,IAAAA,KAAK,EAAE,OAAxB;AAAiCC,IAAAA,KAAK,EAAEf,IAAI,CAACL,KAA7C;AAAoDqB,IAAAA,OAAO,EAAE;AAA7D,GADgB,EAEhB;AACEH,IAAAA,IAAI,EAAE,mBADR;AAEEC,IAAAA,KAAK,EAAE,MAFT;AAGEC,IAAAA,KAAK,EAAEf,IAAI,CAACJ,iBAHd;AAIEoB,IAAAA,OAAO,EAAE;AAJX,GAFgB,EAQhB;AACEH,IAAAA,IAAI,EAAE,oBADR;AAEEC,IAAAA,KAAK,EAAE,aAFT;AAGEC,IAAAA,KAAK,EAAEf,IAAI,CAACH,kBAHd;AAIEmB,IAAAA,OAAO,EAAE;AAJX,GARgB,EAchB;AAAEH,IAAAA,IAAI,EAAE,MAAR;AAAgBC,IAAAA,KAAK,EAAE,MAAvB;AAA+BC,IAAAA,KAAK,EAAEf,IAAI,CAACF,IAA3C;AAAiDkB,IAAAA,OAAO,EAAE;AAA1D,GAdgB,EAehB;AACEH,IAAAA,IAAI,EAAE,OADR;AAEEC,IAAAA,KAAK,EAAE,OAFT;AAGEC,IAAAA,KAAK,EAAEf,IAAI,CAACD,KAHd;AAIEiB,IAAAA,OAAO,EAAE;AAJX,GAfgB,EAqBhB;AAAEF,IAAAA,KAAK,EAAE,MAAT;AAAiBE,IAAAA,OAAO,EAAE;AAA1B,GArBgB,CAAlB;AAwBAnC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIoC,YAAY,GAAG,KAAnB;;AAEA,mBAAeC,WAAf,GAA6B;AAC3B,UAAI;AACF,cAAMhB,MAAM,GAAG,MAAMb,SAAS,EAA9B;AACA,YAAI,CAAC4B,YAAL,EAAmBd,SAAS,CAACD,MAAD,CAAT;AACpB,OAHD,CAGE,OAAOiB,EAAP,EAAW;AACX,YAAIA,EAAE,CAACC,QAAH,IAAeD,EAAE,CAACC,QAAH,CAAYC,MAAZ,KAAuB,GAA1C,EAA+CV,YAAY,CAAC,IAAD,CAAZ;AAChD;AACF;;AAED,mBAAeW,SAAf,GAA2B;AACzB,UAAI;AACF,cAAMtB,IAAI,GAAG,MAAMd,OAAO,CAACoB,KAAD,CAA1B;AACA,YAAI,CAACW,YAAL,EAAmBhB,OAAO,CAACsB,UAAU,CAACvB,IAAD,CAAX,CAAP;AACpB,OAHD,CAGE,OAAOmB,EAAP,EAAW;AACX,YAAIA,EAAE,CAACC,QAAH,IAAeD,EAAE,CAACC,QAAH,CAAYC,MAAZ,KAAuB,GAA1C,EAA+CV,YAAY,CAAC,IAAD,CAAZ;AAChD;AACF;;AAEDO,IAAAA,WAAW;AACX,QAAI,CAACT,KAAL,EAAYa,SAAS;AACrB,WAAO,MAAM;AACXL,MAAAA,YAAY,GAAG,IAAf;AACD,KAFD;AAGD,GA1BQ,EA0BN,CAACR,KAAD,EAAQH,KAAR,CA1BM,CAAT;AA4BA,MAAII,SAAJ,EAAe,OAAO,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;;AAEf,WAASa,UAAT,CAAoBvB,IAApB,EAA0B;AACxB,WAAO;AACLQ,MAAAA,EAAE,EAAER,IAAI,CAACQ,EADJ;AAELb,MAAAA,KAAK,EAAEK,IAAI,CAACL,KAFP;AAGLC,MAAAA,iBAAiB,EAAEI,IAAI,CAACJ,iBAHnB;AAILC,MAAAA,kBAAkB,EAAEG,IAAI,CAACH,kBAJpB;AAKLC,MAAAA,IAAI,EAAEE,IAAI,CAACF,IALN;AAMLC,MAAAA,KAAK,EAAEC,IAAI,CAACD;AANP,KAAP;AAQD;;AAED,QAAMyB,MAAM,GAAG;AACbhB,IAAAA,EAAE,EAAEzB,GAAG,CAAC0C,MAAJ,EADS;AAEb9B,IAAAA,KAAK,EAAEZ,GAAG,CAAC2C,MAAJ,GACJC,QADI,GAEJb,KAFI,CAEE,OAFF,CAFM;AAKblB,IAAAA,iBAAiB,EAAEb,GAAG,CAAC2C,MAAJ,GAAaE,KAAb,CAAmB,EAAnB,CALN;AAMb/B,IAAAA,kBAAkB,EAAEd,GAAG,CAAC2C,MAAJ,GAAaE,KAAb,CAAmB,EAAnB,CANP;AAOb9B,IAAAA,IAAI,EAAEf,GAAG,CAAC0C,MAAJ,GACHI,GADG,CACC,CADD,EAEHC,GAFG,CAEC,EAFD,EAGHH,QAHG,EAPO;AAWb5B,IAAAA,KAAK,EAAEhB,GAAG,CAAC2C,MAAJ,GAAaC,QAAb;AAXM,GAAf;;AAcA,WAASI,aAAT,GAAyB;AACvB,UAAMC,OAAO,GAAG9B,MAAM,CACnB+B,MADa,CACNlC,KAAK,IAAIA,KAAK,CAACc,IAAN,KAAeb,IAAI,CAACD,KADvB,EAEbmC,GAFa,CAETnC,KAAK,IAAIA,KAAK,CAACS,EAFN,EAEU,CAFV,CAAhB;AAGA,6BAAYR,IAAZ;AAAkBD,MAAAA,KAAK,EAAEiC;AAAzB;AACD;;AAED,iBAAeG,QAAf,GAA0B;AACxB,QAAI;AACF,YAAMC,UAAU,GAAGL,aAAa,EAAhC;AACA,UAAI,CAACtB,KAAL,EAAY,MAAMtB,UAAU,CAACa,IAAI,CAACQ,EAAN,EAAU4B,UAAV,CAAhB,CAAZ,KACK,MAAMhD,QAAQ,CAACgD,UAAD,CAAd;AACL5C,MAAAA,OAAO,CAAC6C,IAAR,CAAa,GAAb;AACD,KALD,CAKE,OAAOlB,EAAP,EAAW;AACX,UAAIA,EAAE,CAACC,QAAH,IAAeD,EAAE,CAACC,QAAH,CAAYC,MAAZ,KAAuB,GAA1C,EAA+CV,YAAY,CAAC,IAAD,CAAZ;AAChD;AACF;;AAED,QAAM2B,WAAW,GAAG;AAClBC,IAAAA,QAAQ,EAAE,UADQ;AAElBC,IAAAA,SAAS,EAAE,QAFO;AAGlBC,IAAAA,KAAK,EAAE,MAHW;AAIlBC,IAAAA,GAAG,EAAE;AAJa,GAApB;AAOA,SACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAC,SADP;AAEE,IAAA,KAAK,EAAC,SAFR;AAGE,IAAA,MAAM,EAAE,GAHV;AAIE,IAAA,KAAK,EAAE,GAJT;AAKE,IAAA,OAAO,EAAE,IALX,CAKiB;AALjB;AAME,IAAA,KAAK,EAAEJ,WANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EASE,oBAAC,IAAD;AACE,IAAA,SAAS,EAAE1B,SADb;AAEE,IAAA,IAAI,EAAEZ,IAFR;AAGE,IAAA,OAAO,EAAEC,OAHX;AAIE,IAAA,MAAM,EAAEG,MAJV;AAKE,IAAA,SAAS,EAAEC,SALb;AAME,IAAA,MAAM,EAAEH,MANV;AAOE,IAAA,MAAM,EAAEsB,MAPV;AAQE,IAAA,QAAQ,EAAEW,QARZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF;AAsBD,CA5ID;;AA8IA,eAAe5C,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Joi from \"joi-browser\";\nimport { Redirect } from \"react-router-dom\";\nimport Loader from \"react-loader-spinner\";\n\nimport { getBook, updateBook, saveBook } from \"../services/booksService\";\nimport { getGenres } from \"../services/genresService\";\nimport Form from \"./common/form\";\n\nconst BookForm = ({ history, match: itemRef }) => {\n  const [book, setBook] = useState({\n    title: \"\",\n    author_first_name: \"\",\n    author_second_name: \"\",\n    rate: \"\",\n    genre: \"\"\n  });\n  const [genres, setGenres] = useState([]);\n  const [errors, setErrors] = useState({});\n  const urlId = itemRef.params.id;\n  const isNew = urlId === \"new\" ? true : false;\n  const [isExpired, setIsExpired] = useState(false);\n\n  const inputList = [\n    { name: \"title\", label: \"Title\", value: book.title, element: \"Input\" },\n    {\n      name: \"author_first_name\",\n      label: \"Name\",\n      value: book.author_first_name,\n      element: \"Input\"\n    },\n    {\n      name: \"author_second_name\",\n      label: \"Second Name\",\n      value: book.author_second_name,\n      element: \"Input\"\n    },\n    { name: \"rate\", label: \"Rate\", value: book.rate, element: \"Input\" },\n    {\n      name: \"genre\",\n      label: \"Genre\",\n      value: book.genre,\n      element: \"Select\"\n    },\n    { label: \"Save\", element: \"Button\" }\n  ];\n\n  useEffect(() => {\n    let shouldIgnore = false;\n\n    async function fetchGenres() {\n      try {\n        const genres = await getGenres();\n        if (!shouldIgnore) setGenres(genres);\n      } catch (ex) {\n        if (ex.response && ex.response.status === 401) setIsExpired(true);\n      }\n    }\n\n    async function fetchBook() {\n      try {\n        const book = await getBook(urlId);\n        if (!shouldIgnore) setBook(mapToState(book));\n      } catch (ex) {\n        if (ex.response && ex.response.status === 401) setIsExpired(true);\n      }\n    }\n\n    fetchGenres();\n    if (!isNew) fetchBook();\n    return () => {\n      shouldIgnore = true;\n    };\n  }, [isNew, urlId]);\n\n  if (isExpired) return <Redirect to=\"/logout\" />;\n\n  function mapToState(book) {\n    return {\n      id: book.id,\n      title: book.title,\n      author_first_name: book.author_first_name,\n      author_second_name: book.author_second_name,\n      rate: book.rate,\n      genre: book.genre\n    };\n  }\n\n  const schema = {\n    id: Joi.number(),\n    title: Joi.string()\n      .required()\n      .label(\"Title\"),\n    author_first_name: Joi.string().allow(\"\"),\n    author_second_name: Joi.string().allow(\"\"),\n    rate: Joi.number()\n      .min(1)\n      .max(10)\n      .required(),\n    genre: Joi.string().required()\n  };\n\n  function mapToFetchApi() {\n    const genreId = genres\n      .filter(genre => genre.name === book.genre)\n      .map(genre => genre.id)[0];\n    return { ...book, genre: genreId };\n  }\n\n  async function doSubmit() {\n    try {\n      const mappedBook = mapToFetchApi();\n      if (!isNew) await updateBook(book.id, mappedBook);\n      else await saveBook(mappedBook);\n      history.push(\"/\");\n    } catch (ex) {\n      if (ex.response && ex.response.status === 401) setIsExpired(true);\n    }\n  }\n\n  const loaderStyle = {\n    position: \"absolute\",\n    textAlign: \"center\",\n    width: \"100%\",\n    top: \"20%\"\n  };\n\n  return (\n    <React.Fragment>\n      <Loader\n        type=\"Circles\"\n        color=\"#00BFFF\"\n        height={100}\n        width={100}\n        timeout={1500} //3 secs\n        style={loaderStyle}\n      />\n      <Form\n        inputList={inputList}\n        data={book}\n        setData={setBook}\n        errors={errors}\n        setErrors={setErrors}\n        genres={genres}\n        schema={schema}\n        doSubmit={doSubmit}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default BookForm;\n"]},"metadata":{},"sourceType":"module"}