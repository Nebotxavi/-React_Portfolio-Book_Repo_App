{"ast":null,"code":"import _objectSpread from \"/home/balaclava/Desktop/Javascript/react/100daysCode/01-Book_system/front_book_repo/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/balaclava/Desktop/Javascript/react/100daysCode/01-Book_system/front_book_repo/src/components/common/select.jsx\";\nimport React from \"react\";\n\nconst Select = ({\n  name,\n  label,\n  options,\n  item,\n  setItem\n}) => {\n  return React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: `input-${name}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, label), React.createElement(\"select\", {\n    id: `input-${name}`,\n    name: name,\n    className: \"form-control\",\n    onChange: e => setItem(_objectSpread({}, item, {\n      [name]: e.currentTarget.value\n    })),\n    value: options[1] && options[1].id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, options.map(option => {\n    return React.createElement(\"option\", {\n      value: option.id,\n      key: option.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, option.name);\n  })));\n};\n\nexport default Select;","map":{"version":3,"sources":["/home/balaclava/Desktop/Javascript/react/100daysCode/01-Book_system/front_book_repo/src/components/common/select.jsx"],"names":["React","Select","name","label","options","item","setItem","e","currentTarget","value","id","map","option"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA,OAAf;AAAwBC,EAAAA,IAAxB;AAA8BC,EAAAA;AAA9B,CAAD,KAA6C;AAC1D,SACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAG,SAAQJ,IAAK,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCC,KAAlC,CADF,EAEE;AACE,IAAA,EAAE,EAAG,SAAQD,IAAK,EADpB;AAEE,IAAA,IAAI,EAAEA,IAFR;AAGE,IAAA,SAAS,EAAC,cAHZ;AAIE,IAAA,QAAQ,EAAEK,CAAC,IAAID,OAAO,mBAAMD,IAAN;AAAY,OAACH,IAAD,GAAQK,CAAC,CAACC,aAAF,CAAgBC;AAApC,OAJxB;AAKE,IAAA,KAAK,EAAEL,OAAO,CAAC,CAAD,CAAP,IAAcA,OAAO,CAAC,CAAD,CAAP,CAAWM,EALlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGN,OAAO,CAACO,GAAR,CAAYC,MAAM,IAAI;AACrB,WACE;AAAQ,MAAA,KAAK,EAAEA,MAAM,CAACF,EAAtB;AAA0B,MAAA,GAAG,EAAEE,MAAM,CAACF,EAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGE,MAAM,CAACV,IADV,CADF;AAKD,GANA,CAPH,CAFF,CADF;AAoBD,CArBD;;AAuBA,eAAeD,MAAf","sourcesContent":["import React from \"react\";\n\nconst Select = ({ name, label, options, item, setItem }) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={`input-${name}`}>{label}</label>\n      <select\n        id={`input-${name}`}\n        name={name}\n        className=\"form-control\"\n        onChange={e => setItem({ ...item, [name]: e.currentTarget.value })}\n        value={options[1] && options[1].id}\n      >\n        {options.map(option => {\n          return (\n            <option value={option.id} key={option.id}>\n              {option.name}\n            </option>\n          );\n        })}\n      </select>\n    </div>\n  );\n};\n\nexport default Select;\n"]},"metadata":{},"sourceType":"module"}