{"ast":null,"code":"import _objectSpread from \"/home/balaclava/Desktop/Javascript/react/100daysCode/01-Book_system/front_book_repo/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/balaclava/Desktop/Javascript/react/100daysCode/01-Book_system/front_book_repo/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/balaclava/Desktop/Javascript/react/100daysCode/01-Book_system/front_book_repo/src/components/loginForm.jsx\";\nimport React, { useState } from \"react\";\nimport Joi from \"joi-browser\";\nimport { Redirect } from \"react-router-dom\";\nimport Input from \"./common/input\";\nimport { login, getCurrentUser } from \"../services/authService\";\n\nconst LoginForm = ({\n  location\n}) => {\n  const _useState = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        user = _useState2[0],\n        setUser = _useState2[1];\n\n  const _useState3 = useState({}),\n        _useState4 = _slicedToArray(_useState3, 2),\n        errors = _useState4[0],\n        setErrors = _useState4[1];\n\n  if (getCurrentUser()) return React.createElement(Redirect, {\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  });\n  const schema = {\n    username: Joi.string().required().label(\"Username\"),\n    email: Joi.string().allow(\"\"),\n    password: Joi.string().required().label(\"Password\")\n  };\n  const inputList = [{\n    name: \"username\",\n    label: \"Username\",\n    value: user.username,\n    element: \"Input\"\n  }, {\n    name: \"password\",\n    label: \"Password\",\n    value: user.password,\n    element: \"Input\"\n  }, {\n    label: \"Login\",\n    element: \"button\"\n  }]; // function validate() {\n  //   const options = { abortEarly: false };\n  //   const { error } = Joi.validate(user, schema, options);\n  //   if (!error) return null;\n  //   const errors = {};\n  //   for (let item of error.details) errors[item.path[0]] = item.message;\n  //   return errors;\n  // }\n  // function validateProperty({ name, value }) {\n  //   const obj = { [name]: value };\n  //   const propertySchema = { [name]: schema[name] };\n  //   const { error } = Joi.validate(obj, propertySchema);\n  //   return error ? error.details[0].message : null;\n  // }\n  // function handleChange({ currentTarget: input }) {\n  //   const allErrors = errors;\n  //   const errorMessage = validateProperty(input);\n  //   if (errorMessage) allErrors[input.name] = errorMessage;\n  //   else delete allErrors[input.name];\n  //   setErrors(allErrors);\n  //   setUser({ ...user, [input.name]: input.value });\n  // }\n  // function handleSubmit(e) {\n  //   e.preventDefault();\n  //   const errors = validate();\n  //   setErrors(errors || {});\n  //   if (errors) return;\n  //   doSubmit();\n  // }\n\n  async function doSubmit() {\n    try {\n      await login(user);\n      const state = location.state;\n      window.location = state ? state.from.pathname : \"/\";\n    } catch (ex) {\n      if (ex.response && ex.response.status >= 400 && ex.response.status <= 500) {\n        setErrors(_objectSpread({}, errors, {\n          username: ex.response.data.detail\n        }));\n      }\n    }\n  } // function renderButton(label) {\n  //   return (\n  //     <button type=\"submit\" className=\"btn btn-primary\" disabled={validate()}>\n  //       {label}\n  //     </button>\n  //   );\n  // }\n  // function renderInput(name, label, type = \"text\") {\n  //   return (\n  //     <Input\n  //       name={name}\n  //       label={label}\n  //       type={type}\n  //       item={user}\n  //       setItem={setUser}\n  //       handleChange={handleChange}\n  //       error={errors[name]}\n  //     />\n  //   );\n  // }\n\n\n  return React.createElement(Form, {\n    inputList: inputList,\n    data: user,\n    setData: setUser,\n    errors: errors,\n    setErrors: setErrors,\n    schema: schema,\n    doSubmit: doSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  });\n};\n\nexport default LoginForm;","map":{"version":3,"sources":["/home/balaclava/Desktop/Javascript/react/100daysCode/01-Book_system/front_book_repo/src/components/loginForm.jsx"],"names":["React","useState","Joi","Redirect","Input","login","getCurrentUser","LoginForm","location","username","email","password","user","setUser","errors","setErrors","schema","string","required","label","allow","inputList","name","value","element","doSubmit","state","window","from","pathname","ex","response","status","data","detail"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Joi from \"joi-browser\";\nimport { Redirect } from \"react-router-dom\";\n\nimport Input from \"./common/input\";\nimport { login, getCurrentUser } from \"../services/authService\";\n\nconst LoginForm = ({ location }) => {\n  const [user, setUser] = useState({ username: \"\", email: \"\", password: \"\" });\n  const [errors, setErrors] = useState({});\n\n  if (getCurrentUser()) return <Redirect to=\"/\" />;\n\n  const schema = {\n    username: Joi.string()\n      .required()\n      .label(\"Username\"),\n    email: Joi.string().allow(\"\"),\n    password: Joi.string()\n      .required()\n      .label(\"Password\")\n  };\n\n  const inputList = [\n    {\n      name: \"username\",\n      label: \"Username\",\n      value: user.username,\n      element: \"Input\"\n    },\n    {\n      name: \"password\",\n      label: \"Password\",\n      value: user.password,\n      element: \"Input\"\n    },\n    { label: \"Login\", element: \"button\" }\n  ];\n\n  // function validate() {\n  //   const options = { abortEarly: false };\n  //   const { error } = Joi.validate(user, schema, options);\n  //   if (!error) return null;\n\n  //   const errors = {};\n  //   for (let item of error.details) errors[item.path[0]] = item.message;\n  //   return errors;\n  // }\n\n  // function validateProperty({ name, value }) {\n  //   const obj = { [name]: value };\n  //   const propertySchema = { [name]: schema[name] };\n  //   const { error } = Joi.validate(obj, propertySchema);\n\n  //   return error ? error.details[0].message : null;\n  // }\n\n  // function handleChange({ currentTarget: input }) {\n  //   const allErrors = errors;\n  //   const errorMessage = validateProperty(input);\n  //   if (errorMessage) allErrors[input.name] = errorMessage;\n  //   else delete allErrors[input.name];\n\n  //   setErrors(allErrors);\n  //   setUser({ ...user, [input.name]: input.value });\n  // }\n\n  // function handleSubmit(e) {\n  //   e.preventDefault();\n\n  //   const errors = validate();\n  //   setErrors(errors || {});\n  //   if (errors) return;\n\n  //   doSubmit();\n  // }\n\n  async function doSubmit() {\n    try {\n      await login(user);\n      const { state } = location;\n      window.location = state ? state.from.pathname : \"/\";\n    } catch (ex) {\n      if (\n        ex.response &&\n        ex.response.status >= 400 &&\n        ex.response.status <= 500\n      ) {\n        setErrors({ ...errors, username: ex.response.data.detail });\n      }\n    }\n  }\n\n  // function renderButton(label) {\n  //   return (\n  //     <button type=\"submit\" className=\"btn btn-primary\" disabled={validate()}>\n  //       {label}\n  //     </button>\n  //   );\n  // }\n\n  // function renderInput(name, label, type = \"text\") {\n  //   return (\n  //     <Input\n  //       name={name}\n  //       label={label}\n  //       type={type}\n  //       item={user}\n  //       setItem={setUser}\n  //       handleChange={handleChange}\n  //       error={errors[name]}\n  //     />\n  //   );\n  // }\n\n  return (\n    <Form\n      inputList={inputList}\n      data={user}\n      setData={setUser}\n      errors={errors}\n      setErrors={setErrors}\n      schema={schema}\n      doSubmit={doSubmit}\n    />\n  );\n};\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}