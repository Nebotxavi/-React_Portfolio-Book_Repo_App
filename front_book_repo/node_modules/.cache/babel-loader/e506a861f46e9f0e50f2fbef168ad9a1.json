{"ast":null,"code":"import _slicedToArray from \"/home/balaclava/Desktop/Javascript/react/100daysCode/01-Book_system/front_book_repo/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/balaclava/Desktop/Javascript/react/100daysCode/01-Book_system/front_book_repo/src/components/registerForm.jsx\";\nimport React, { useState } from \"react\";\nimport Joi from \"joi-browser\";\nimport { register } from \"../services/userServices\";\nimport { renderInput, renderButton, handleSubmit } from \"./common/form\";\n\nconst RegisterForm = ({\n  history\n}) => {\n  const _useState = useState(\"checking context theme\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        theme = _useState2[0],\n        setTheme = _useState2[1];\n\n  const _useState3 = useState({\n    username: \"\",\n    email: \"\",\n    emailConfirmation: \"\",\n    password: \"\"\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        user = _useState4[0],\n        setUser = _useState4[1];\n\n  const _useState5 = useState({}),\n        _useState6 = _slicedToArray(_useState5, 2),\n        errors = _useState6[0],\n        setErrors = _useState6[1];\n\n  const schema = {\n    username: Joi.string().required(),\n    email: Joi.string().required(),\n    emailConfirmation: Joi.string().required(),\n    password: Joi.string().required()\n  };\n  const ThemeContext = React.createContext(\"checking context\");\n\n  async function doSubmit() {\n    await register(user);\n    history.push(\"/login\");\n  }\n\n  return React.createElement(ThemeContext.Provider, {\n    value: theme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: e => handleSubmit(e, setErrors, user, schema, doSubmit),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, renderInput(\"username\", \"Username\", user, setUser, errors, setErrors, schema), renderInput(\"email\", \"Email\", user, setUser, errors, setErrors, schema), renderInput(\"emailConfirmation\", \"Email Confirmation\", user, setUser, errors, setErrors, schema), renderInput(\"password\", \"Password\", user, setUser, errors, setErrors, schema, \"password\"), renderButton(\"Login\", user, schema)));\n};\n\nexport default RegisterForm;","map":{"version":3,"sources":["/home/balaclava/Desktop/Javascript/react/100daysCode/01-Book_system/front_book_repo/src/components/registerForm.jsx"],"names":["React","useState","Joi","register","renderInput","renderButton","handleSubmit","RegisterForm","history","theme","setTheme","username","email","emailConfirmation","password","user","setUser","errors","setErrors","schema","string","required","ThemeContext","createContext","doSubmit","push","e"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,SAASC,QAAT,QAAyB,0BAAzB;AACA,SAASC,WAAT,EAAsBC,YAAtB,EAAoCC,YAApC,QAAwD,eAAxD;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAAA,oBACVP,QAAQ,CAAC,wBAAD,CADE;AAAA;AAAA,QAC7BQ,KAD6B;AAAA,QACtBC,QADsB;;AAAA,qBAEZT,QAAQ,CAAC;AAC/BU,IAAAA,QAAQ,EAAE,EADqB;AAE/BC,IAAAA,KAAK,EAAE,EAFwB;AAG/BC,IAAAA,iBAAiB,EAAE,EAHY;AAI/BC,IAAAA,QAAQ,EAAE;AAJqB,GAAD,CAFI;AAAA;AAAA,QAE7BC,IAF6B;AAAA,QAEvBC,OAFuB;;AAAA,qBAQRf,QAAQ,CAAC,EAAD,CARA;AAAA;AAAA,QAQ7BgB,MAR6B;AAAA,QAQrBC,SARqB;;AAUpC,QAAMC,MAAM,GAAG;AACbR,IAAAA,QAAQ,EAAET,GAAG,CAACkB,MAAJ,GAAaC,QAAb,EADG;AAEbT,IAAAA,KAAK,EAAEV,GAAG,CAACkB,MAAJ,GAAaC,QAAb,EAFM;AAGbR,IAAAA,iBAAiB,EAAEX,GAAG,CAACkB,MAAJ,GAAaC,QAAb,EAHN;AAIbP,IAAAA,QAAQ,EAAEZ,GAAG,CAACkB,MAAJ,GAAaC,QAAb;AAJG,GAAf;AAOA,QAAMC,YAAY,GAAGtB,KAAK,CAACuB,aAAN,CAAoB,kBAApB,CAArB;;AAEA,iBAAeC,QAAf,GAA0B;AACxB,UAAMrB,QAAQ,CAACY,IAAD,CAAd;AACAP,IAAAA,OAAO,CAACiB,IAAR,CAAa,QAAb;AACD;;AAED,SACE,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAEhB,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,QAAQ,EAAEiB,CAAC,IAAIpB,YAAY,CAACoB,CAAD,EAAIR,SAAJ,EAAeH,IAAf,EAAqBI,MAArB,EAA6BK,QAA7B,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGpB,WAAW,CACV,UADU,EAEV,UAFU,EAGVW,IAHU,EAIVC,OAJU,EAKVC,MALU,EAMVC,SANU,EAOVC,MAPU,CADd,EAUGf,WAAW,CACV,OADU,EAEV,OAFU,EAGVW,IAHU,EAIVC,OAJU,EAKVC,MALU,EAMVC,SANU,EAOVC,MAPU,CAVd,EAmBGf,WAAW,CACV,mBADU,EAEV,oBAFU,EAGVW,IAHU,EAIVC,OAJU,EAKVC,MALU,EAMVC,SANU,EAOVC,MAPU,CAnBd,EA4BGf,WAAW,CACV,UADU,EAEV,UAFU,EAGVW,IAHU,EAIVC,OAJU,EAKVC,MALU,EAMVC,SANU,EAOVC,MAPU,EAQV,UARU,CA5Bd,EAsCGd,YAAY,CAAC,OAAD,EAAUU,IAAV,EAAgBI,MAAhB,CAtCf,CADF,CADF;AA4CD,CApED;;AAsEA,eAAeZ,YAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Joi from \"joi-browser\";\n\nimport { register } from \"../services/userServices\";\nimport { renderInput, renderButton, handleSubmit } from \"./common/form\";\n\nconst RegisterForm = ({ history }) => {\n  const [theme, setTheme] = useState(\"checking context theme\");\n  const [user, setUser] = useState({\n    username: \"\",\n    email: \"\",\n    emailConfirmation: \"\",\n    password: \"\"\n  });\n  const [errors, setErrors] = useState({});\n\n  const schema = {\n    username: Joi.string().required(),\n    email: Joi.string().required(),\n    emailConfirmation: Joi.string().required(),\n    password: Joi.string().required()\n  };\n\n  const ThemeContext = React.createContext(\"checking context\");\n\n  async function doSubmit() {\n    await register(user);\n    history.push(\"/login\");\n  }\n\n  return (\n    <ThemeContext.Provider value={theme}>\n      <form onSubmit={e => handleSubmit(e, setErrors, user, schema, doSubmit)}>\n        {renderInput(\n          \"username\",\n          \"Username\",\n          user,\n          setUser,\n          errors,\n          setErrors,\n          schema\n        )}\n        {renderInput(\n          \"email\",\n          \"Email\",\n          user,\n          setUser,\n          errors,\n          setErrors,\n          schema\n        )}\n        {renderInput(\n          \"emailConfirmation\",\n          \"Email Confirmation\",\n          user,\n          setUser,\n          errors,\n          setErrors,\n          schema\n        )}\n        {renderInput(\n          \"password\",\n          \"Password\",\n          user,\n          setUser,\n          errors,\n          setErrors,\n          schema,\n          \"password\"\n        )}\n        {renderButton(\"Login\", user, schema)}\n      </form>\n    </ThemeContext.Provider>\n  );\n};\n\nexport default RegisterForm;\n"]},"metadata":{},"sourceType":"module"}