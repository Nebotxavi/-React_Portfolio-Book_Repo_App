{"ast":null,"code":"import _slicedToArray from \"/home/balaclava/Desktop/Javascript/react/100daysCode/01-Book_system/front_book_repo/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/balaclava/Desktop/Javascript/react/100daysCode/01-Book_system/front_book_repo/src/components/registerForm.jsx\";\nimport React, { useState } from \"react\";\nimport Joi from \"joi-browser\";\nimport { renderInput, renderButton, handleSubmit } from \"./common/form\";\n\nconst RegisterForm = () => {\n  const _useState = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    emailConfirmation: \"\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        user = _useState2[0],\n        setUser = _useState2[1];\n\n  const _useState3 = useState({}),\n        _useState4 = _slicedToArray(_useState3, 2),\n        errors = _useState4[0],\n        setErrors = _useState4[1];\n\n  const schema = {\n    username: Joi.string().required(),\n    email: Joi.string().allow(\"\"),\n    password: Joi.string().required(),\n    emailConfirmation: Joi.ref(\"password\")\n  };\n  return React.createElement(\"form\", {\n    onSubmit: e => handleSubmit(e, setErrors, user, schema),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, renderInput(\"username\", \"Username\", user, setUser, errors, setErrors, schema), renderInput(\"email\", \"Email\", user, setUser, errors, setErrors, schema), renderInput(\"password\", \"Password\", user, setUser, errors, setErrors, schema), renderInput(\"passwordConfirmation\", \"Confirmation\", user, setUser, errors, setErrors, schema), renderButton(\"Login\", user, schema));\n};\n\nexport default RegisterForm;","map":{"version":3,"sources":["/home/balaclava/Desktop/Javascript/react/100daysCode/01-Book_system/front_book_repo/src/components/registerForm.jsx"],"names":["React","useState","Joi","renderInput","renderButton","handleSubmit","RegisterForm","username","email","password","emailConfirmation","user","setUser","errors","setErrors","schema","string","required","allow","ref","e"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,SAASC,WAAT,EAAsBC,YAAtB,EAAoCC,YAApC,QAAwD,eAAxD;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA,oBACDL,QAAQ,CAAC;AAC/BM,IAAAA,QAAQ,EAAE,EADqB;AAE/BC,IAAAA,KAAK,EAAE,EAFwB;AAG/BC,IAAAA,QAAQ,EAAE,EAHqB;AAI/BC,IAAAA,iBAAiB,EAAE;AAJY,GAAD,CADP;AAAA;AAAA,QAClBC,IADkB;AAAA,QACZC,OADY;;AAAA,qBAOGX,QAAQ,CAAC,EAAD,CAPX;AAAA;AAAA,QAOlBY,MAPkB;AAAA,QAOVC,SAPU;;AASzB,QAAMC,MAAM,GAAG;AACbR,IAAAA,QAAQ,EAAEL,GAAG,CAACc,MAAJ,GAAaC,QAAb,EADG;AAEbT,IAAAA,KAAK,EAAEN,GAAG,CAACc,MAAJ,GAAaE,KAAb,CAAmB,EAAnB,CAFM;AAGbT,IAAAA,QAAQ,EAAEP,GAAG,CAACc,MAAJ,GAAaC,QAAb,EAHG;AAIbP,IAAAA,iBAAiB,EAAER,GAAG,CAACiB,GAAJ,CAAQ,UAAR;AAJN,GAAf;AAOA,SACE;AAAM,IAAA,QAAQ,EAAEC,CAAC,IAAIf,YAAY,CAACe,CAAD,EAAIN,SAAJ,EAAeH,IAAf,EAAqBI,MAArB,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGZ,WAAW,CACV,UADU,EAEV,UAFU,EAGVQ,IAHU,EAIVC,OAJU,EAKVC,MALU,EAMVC,SANU,EAOVC,MAPU,CADd,EAUGZ,WAAW,CAAC,OAAD,EAAU,OAAV,EAAmBQ,IAAnB,EAAyBC,OAAzB,EAAkCC,MAAlC,EAA0CC,SAA1C,EAAqDC,MAArD,CAVd,EAWGZ,WAAW,CACV,UADU,EAEV,UAFU,EAGVQ,IAHU,EAIVC,OAJU,EAKVC,MALU,EAMVC,SANU,EAOVC,MAPU,CAXd,EAoBGZ,WAAW,CACV,sBADU,EAEV,cAFU,EAGVQ,IAHU,EAIVC,OAJU,EAKVC,MALU,EAMVC,SANU,EAOVC,MAPU,CApBd,EA6BGX,YAAY,CAAC,OAAD,EAAUO,IAAV,EAAgBI,MAAhB,CA7Bf,CADF;AAiCD,CAjDD;;AAmDA,eAAeT,YAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Joi from \"joi-browser\";\n\nimport { renderInput, renderButton, handleSubmit } from \"./common/form\";\n\nconst RegisterForm = () => {\n  const [user, setUser] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    emailConfirmation: \"\"\n  });\n  const [errors, setErrors] = useState({});\n\n  const schema = {\n    username: Joi.string().required(),\n    email: Joi.string().allow(\"\"),\n    password: Joi.string().required(),\n    emailConfirmation: Joi.ref(\"password\")\n  };\n\n  return (\n    <form onSubmit={e => handleSubmit(e, setErrors, user, schema)}>\n      {renderInput(\n        \"username\",\n        \"Username\",\n        user,\n        setUser,\n        errors,\n        setErrors,\n        schema\n      )}\n      {renderInput(\"email\", \"Email\", user, setUser, errors, setErrors, schema)}\n      {renderInput(\n        \"password\",\n        \"Password\",\n        user,\n        setUser,\n        errors,\n        setErrors,\n        schema\n      )}\n      {renderInput(\n        \"passwordConfirmation\",\n        \"Confirmation\",\n        user,\n        setUser,\n        errors,\n        setErrors,\n        schema\n      )}\n      {renderButton(\"Login\", user, schema)}\n    </form>\n  );\n};\n\nexport default RegisterForm;\n"]},"metadata":{},"sourceType":"module"}