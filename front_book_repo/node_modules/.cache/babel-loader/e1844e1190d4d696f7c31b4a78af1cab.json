{"ast":null,"code":"import http from \"./httpService\";\nconst apiEndpoint = \"users/\";\nconst tokenKey = \"token\";\nhttp.setJwt(getJwt());\nexport async function login({\n  username,\n  password\n}) {\n  const _ref = await http.post(apiEndpoint + \"token/\", {\n    username,\n    password\n  }),\n        token = _ref.data; // TRY (usename || email)\n\n\n  console.log(\"token in login\", token);\n  localStorage.setItem(tokenKey, token.access);\n}\nexport function logout() {\n  localStorage.removeItem(tokenKey);\n}\nexport function getJwt() {\n  const token = localStorage.getItem(tokenKey);\n  console.log(\"token in getJwt\", token);\n  return token; //   return JSON.parse(token).access;\n}","map":{"version":3,"sources":["/home/balaclava/Desktop/Javascript/react/100daysCode/01-Book_system/front_book_repo/src/services/authService.js"],"names":["http","apiEndpoint","tokenKey","setJwt","getJwt","login","username","password","post","token","data","console","log","localStorage","setItem","access","logout","removeItem","getItem"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,eAAjB;AAEA,MAAMC,WAAW,GAAG,QAApB;AACA,MAAMC,QAAQ,GAAG,OAAjB;AAEAF,IAAI,CAACG,MAAL,CAAYC,MAAM,EAAlB;AAEA,OAAO,eAAeC,KAAf,CAAqB;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAArB,EAA6C;AAAA,eAC1B,MAAMP,IAAI,CAACQ,IAAL,CAAUP,WAAW,GAAG,QAAxB,EAAkC;AAC9DK,IAAAA,QAD8D;AAE9DC,IAAAA;AAF8D,GAAlC,CADoB;AAAA,QACpCE,KADoC,QAC1CC,IAD0C,EAI9C;;;AACJC,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BH,KAA9B;AACAI,EAAAA,YAAY,CAACC,OAAb,CAAqBZ,QAArB,EAA+BO,KAAK,CAACM,MAArC;AACD;AAED,OAAO,SAASC,MAAT,GAAkB;AACvBH,EAAAA,YAAY,CAACI,UAAb,CAAwBf,QAAxB;AACD;AAED,OAAO,SAASE,MAAT,GAAkB;AACvB,QAAMK,KAAK,GAAGI,YAAY,CAACK,OAAb,CAAqBhB,QAArB,CAAd;AACAS,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BH,KAA/B;AACA,SAAOA,KAAP,CAHuB,CAIvB;AACD","sourcesContent":["import http from \"./httpService\";\n\nconst apiEndpoint = \"users/\";\nconst tokenKey = \"token\";\n\nhttp.setJwt(getJwt());\n\nexport async function login({ username, password }) {\n  const { data: token } = await http.post(apiEndpoint + \"token/\", {\n    username,\n    password\n  }); // TRY (usename || email)\n  console.log(\"token in login\", token);\n  localStorage.setItem(tokenKey, token.access);\n}\n\nexport function logout() {\n  localStorage.removeItem(tokenKey);\n}\n\nexport function getJwt() {\n  const token = localStorage.getItem(tokenKey);\n  console.log(\"token in getJwt\", token);\n  return token;\n  //   return JSON.parse(token).access;\n}\n"]},"metadata":{},"sourceType":"module"}