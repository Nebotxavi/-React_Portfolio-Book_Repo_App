{"ast":null,"code":"import _objectSpread from \"/home/balaclava/Desktop/Javascript/react/100daysCode/01-Book_system/front_book_repo/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/balaclava/Desktop/Javascript/react/100daysCode/01-Book_system/front_book_repo/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/balaclava/Desktop/Javascript/react/100daysCode/01-Book_system/front_book_repo/src/components/bookForm.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport Joi from \"joi-browser\";\nimport { getBook, updateBook, saveBook } from \"../services/booksService\";\nimport { getGenres } from \"../services/genresService\";\nimport Input from \"./common/input\";\nimport Select from \"./common/select\";\n\nconst BookForm = ({\n  match: item\n}) => {\n  const _useState = useState({\n    title: \"\",\n    author_first_name: \"\",\n    author_second_name: \"\",\n    rate: \"\",\n    genre: \"\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        book = _useState2[0],\n        setBook = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        genres = _useState4[0],\n        setGenres = _useState4[1];\n\n  const _useState5 = useState({}),\n        _useState6 = _slicedToArray(_useState5, 2),\n        errors = _useState6[0],\n        setErrors = _useState6[1];\n\n  const urlId = item.params.id;\n  const isNew = urlId === \"new\" ? true : false;\n  useEffect(() => {\n    let shouldIgnore = false;\n\n    async function fetchGenres() {\n      const genres = await getGenres();\n      if (!shouldIgnore) setGenres(genres);\n    }\n\n    async function fetchBook() {\n      const book = await getBook(urlId);\n      if (!shouldIgnore) setBook(mapToState(book));\n    }\n\n    fetchGenres();\n    if (!isNew) fetchBook();\n    return () => {\n      shouldIgnore = true;\n    };\n  }, [item, isNew, urlId]);\n\n  function mapToState(book) {\n    return {\n      id: book.id,\n      title: book.title,\n      author_first_name: book.author_first_name,\n      author_second_name: book.author_second_name,\n      rate: book.rate,\n      genre: book.genre\n    };\n  }\n\n  const schema = {\n    id: Joi.number(),\n    title: Joi.string().required(),\n    author_first_name: Joi.string(),\n    author_second_name: Joi.string(),\n    rate: Joi.number().min(0).max(10).required(),\n    genre: Joi.string().required()\n  };\n\n  function mapToFetchApi() {\n    const genreId = genres.filter(genre => genre.name === book.genre).map(genre => genre.id)[0];\n    return _objectSpread({}, book, {\n      genre: genreId\n    });\n  }\n\n  function validate() {\n    const _Joi$validate = Joi.validate(book, schema),\n          error = _Joi$validate.error;\n\n    return error || {};\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    const error = validate();\n    if (errors) return;\n    doSubmit();\n  }\n\n  function doSubmit() {\n    const mappedBook = mapToFetchApi();\n    if (!isNew) updateBook(book.id, mappedBook);else saveBook(mappedBook);\n  }\n\n  function renderInput(name, label, type = \"text\") {\n    return React.createElement(Input, {\n      name: name,\n      label: label,\n      type: type,\n      item: book,\n      setItem: setBook,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    });\n  }\n\n  function renderSelect(name, label) {\n    return React.createElement(Select, {\n      name: name,\n      label: label,\n      options: genres,\n      item: book,\n      setItem: setBook,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"form\", {\n    onSubmit: e => handleSubmit(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, renderInput(\"title\", \"Title\"), renderInput(\"rate\", \"Rate\"), renderInput(\"author_first_name\", \"Name\"), renderInput(\"author_second_name\", \"Second name\"), renderSelect(\"genre\", \"Genre\"), React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \"Save\"));\n};\n\nexport default BookForm;","map":{"version":3,"sources":["/home/balaclava/Desktop/Javascript/react/100daysCode/01-Book_system/front_book_repo/src/components/bookForm.jsx"],"names":["React","useEffect","useState","Joi","getBook","updateBook","saveBook","getGenres","Input","Select","BookForm","match","item","title","author_first_name","author_second_name","rate","genre","book","setBook","genres","setGenres","errors","setErrors","urlId","params","id","isNew","shouldIgnore","fetchGenres","fetchBook","mapToState","schema","number","string","required","min","max","mapToFetchApi","genreId","filter","name","map","validate","error","handleSubmit","e","preventDefault","doSubmit","mappedBook","renderInput","label","type","renderSelect"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Joi from \"joi-browser\";\n\nimport { getBook, updateBook, saveBook } from \"../services/booksService\";\nimport { getGenres } from \"../services/genresService\";\nimport Input from \"./common/input\";\nimport Select from \"./common/select\";\n\nconst BookForm = ({ match: item }) => {\n  const [book, setBook] = useState({\n    title: \"\",\n    author_first_name: \"\",\n    author_second_name: \"\",\n    rate: \"\",\n    genre: \"\"\n  });\n  const [genres, setGenres] = useState([]);\n  const [errors, setErrors] = useState({});\n  const urlId = item.params.id;\n  const isNew = urlId === \"new\" ? true : false;\n\n  useEffect(() => {\n    let shouldIgnore = false;\n\n    async function fetchGenres() {\n      const genres = await getGenres();\n      if (!shouldIgnore) setGenres(genres);\n    }\n\n    async function fetchBook() {\n      const book = await getBook(urlId);\n      if (!shouldIgnore) setBook(mapToState(book));\n    }\n    fetchGenres();\n    if (!isNew) fetchBook();\n    return () => {\n      shouldIgnore = true;\n    };\n  }, [item, isNew, urlId]);\n\n  function mapToState(book) {\n    return {\n      id: book.id,\n      title: book.title,\n      author_first_name: book.author_first_name,\n      author_second_name: book.author_second_name,\n      rate: book.rate,\n      genre: book.genre\n    };\n  }\n\n  const schema = {\n    id: Joi.number(),\n    title: Joi.string().required(),\n    author_first_name: Joi.string(),\n    author_second_name: Joi.string(),\n    rate: Joi.number()\n      .min(0)\n      .max(10)\n      .required(),\n    genre: Joi.string().required()\n  };\n\n  function mapToFetchApi() {\n    const genreId = genres\n      .filter(genre => genre.name === book.genre)\n      .map(genre => genre.id)[0];\n    return { ...book, genre: genreId };\n  }\n\n  function validate() {\n    const { error } = Joi.validate(book, schema);\n    return error || {};\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    const error = validate();\n    if (errors) return;\n\n    doSubmit();\n  }\n\n  function doSubmit() {\n    const mappedBook = mapToFetchApi();\n    if (!isNew) updateBook(book.id, mappedBook);\n    else saveBook(mappedBook);\n  }\n\n  function renderInput(name, label, type = \"text\") {\n    return (\n      <Input\n        name={name}\n        label={label}\n        type={type}\n        item={book}\n        setItem={setBook}\n      />\n    );\n  }\n\n  function renderSelect(name, label) {\n    return (\n      <Select\n        name={name}\n        label={label}\n        options={genres}\n        item={book}\n        setItem={setBook}\n      />\n    );\n  }\n\n  return (\n    <form onSubmit={e => handleSubmit(e)}>\n      {renderInput(\"title\", \"Title\")}\n      {renderInput(\"rate\", \"Rate\")}\n      {renderInput(\"author_first_name\", \"Name\")}\n      {renderInput(\"author_second_name\", \"Second name\")}\n      {renderSelect(\"genre\", \"Genre\")}\n      <button type=\"submit\" className=\"btn btn-primary\">\n        Save\n      </button>\n    </form>\n  );\n};\n\nexport default BookForm;\n"]},"metadata":{},"sourceType":"module"}