{"ast":null,"code":"import _objectSpread from \"/home/balaclava/Desktop/Javascript/react/100daysCode/01-Book_system/front_book_repo/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/balaclava/Desktop/Javascript/react/100daysCode/01-Book_system/front_book_repo/src/components/common/form.jsx\";\nimport React from \"react\";\nimport Joi from \"joi-browser\";\nimport Input from \"./input\"; // import Select from \"./select\";\n\nconst Form = ({\n  inputList,\n  data,\n  setData,\n  errors,\n  setErrors,\n  schema,\n  doSubmit\n}) => {\n  const validate = () => {\n    const options = {\n      abortEarly: false\n    };\n\n    const _Joi$validate = Joi.validate(data, schema, options),\n          error = _Joi$validate.error;\n\n    if (!error) return null;\n    const errors = {};\n\n    for (let item of error.details) errors[item.path[0]] = item.message;\n\n    return errors;\n  };\n\n  const validateProperty = ({\n    name,\n    value\n  }) => {\n    const obj = {\n      [name]: value\n    };\n    const propertySchema = {\n      [name]: schema[name]\n    };\n\n    const _Joi$validate2 = Joi.validate(obj, propertySchema),\n          error = _Joi$validate2.error;\n\n    return error ? error.details[0].message : null;\n  };\n\n  const handleChange = ({\n    currentTarget: input\n  }) => {\n    const allErrors = errors;\n    const errorMessage = validateProperty(input);\n    if (errorMessage) allErrors[input.name] = errorMessage;else delete allErrors[input.name];\n    setErrors(allErrors);\n    setData(_objectSpread({}, data, {\n      [input.name]: input.value\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const errors = validate(data, schema);\n    setErrors(errors || {});\n    if (errors) return;\n    doSubmit();\n  };\n\n  const renderButton = label => {\n    return React.createElement(\"button\", {\n      type: \"submit\",\n      key: label,\n      className: \"btn btn-primary\",\n      disabled: validate(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, label);\n  };\n\n  return React.createElement(\"form\", {\n    action: \"\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, inputList.map(({\n    name,\n    label,\n    value,\n    type = \"text\",\n    element\n  }) => {\n    if (element === \"Input\") return React.createElement(Input, {\n      name: name,\n      label: label,\n      type: type,\n      value: value,\n      error: errors[name],\n      key: name,\n      handleChange: handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    });else return renderButton(label);\n  }));\n};\n\nexport default Form; //    function renderSelect(name, label) {\n//     return (\n//       <Select\n//         name={name}\n//         label={label}\n//         options={genres}\n//         item={book}\n//         setItem={setBook}\n//         handleChange={handleChange}\n//         error={errors[name]}\n//       />\n//     );\n//   }\n// const renderInput = (\n//   name,\n//   label,\n//   data,\n//   setData,\n//   errors,\n//   setErrors,\n//   schema,\n//   type = \"text\"\n// ) => {\n//   return (\n//     <Input\n//       name={name}\n//       label={label}\n//       type={type}\n//       item={data}\n//       setItem={setData}\n//       handleChange={e =>\n//         handleChange(e, errors, setErrors, data, setData, schema)\n//       }\n//       error={errors[name]}\n//     />\n//   );\n// };","map":{"version":3,"sources":["/home/balaclava/Desktop/Javascript/react/100daysCode/01-Book_system/front_book_repo/src/components/common/form.jsx"],"names":["React","Joi","Input","Form","inputList","data","setData","errors","setErrors","schema","doSubmit","validate","options","abortEarly","error","item","details","path","message","validateProperty","name","value","obj","propertySchema","handleChange","currentTarget","input","allErrors","errorMessage","handleSubmit","e","preventDefault","renderButton","label","map","type","element"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Joi from \"joi-browser\";\n\nimport Input from \"./input\";\n// import Select from \"./select\";\n\nconst Form = ({\n  inputList,\n  data,\n  setData,\n  errors,\n  setErrors,\n  schema,\n  doSubmit\n}) => {\n  const validate = () => {\n    const options = { abortEarly: false };\n    const { error } = Joi.validate(data, schema, options);\n    if (!error) return null;\n\n    const errors = {};\n    for (let item of error.details) errors[item.path[0]] = item.message;\n    return errors;\n  };\n\n  const validateProperty = ({ name, value }) => {\n    const obj = { [name]: value };\n    const propertySchema = { [name]: schema[name] };\n    const { error } = Joi.validate(obj, propertySchema);\n\n    return error ? error.details[0].message : null;\n  };\n\n  const handleChange = ({ currentTarget: input }) => {\n    const allErrors = errors;\n    const errorMessage = validateProperty(input);\n    if (errorMessage) allErrors[input.name] = errorMessage;\n    else delete allErrors[input.name];\n\n    setErrors(allErrors);\n    setData({ ...data, [input.name]: input.value });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const errors = validate(data, schema);\n    setErrors(errors || {});\n    if (errors) return;\n\n    doSubmit();\n  };\n\n  const renderButton = label => {\n    return (\n      <button\n        type=\"submit\"\n        key={label}\n        className=\"btn btn-primary\"\n        disabled={validate()}\n      >\n        {label}\n      </button>\n    );\n  };\n\n  return (\n    <form action=\"\" onSubmit={handleSubmit}>\n      {inputList.map(({ name, label, value, type = \"text\", element }) => {\n        if (element === \"Input\")\n          return (\n            <Input\n              name={name}\n              label={label}\n              type={type}\n              value={value}\n              error={errors[name]}\n              key={name}\n              handleChange={handleChange}\n            />\n          );\n        else return renderButton(label);\n      })}\n    </form>\n  );\n};\n\nexport default Form;\n\n//    function renderSelect(name, label) {\n//     return (\n//       <Select\n//         name={name}\n//         label={label}\n//         options={genres}\n//         item={book}\n//         setItem={setBook}\n//         handleChange={handleChange}\n//         error={errors[name]}\n//       />\n//     );\n//   }\n\n// const renderInput = (\n//   name,\n//   label,\n//   data,\n//   setData,\n//   errors,\n//   setErrors,\n//   schema,\n//   type = \"text\"\n// ) => {\n//   return (\n//     <Input\n//       name={name}\n//       label={label}\n//       type={type}\n//       item={data}\n//       setItem={setData}\n//       handleChange={e =>\n//         handleChange(e, errors, setErrors, data, setData, schema)\n//       }\n//       error={errors[name]}\n//     />\n//   );\n// };\n"]},"metadata":{},"sourceType":"module"}