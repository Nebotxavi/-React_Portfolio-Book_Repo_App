{"ast":null,"code":"import _slicedToArray from \"/home/balaclava/Desktop/Javascript/react/100daysCode/01-Book_system/front_book_repo/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/balaclava/Desktop/Javascript/react/100daysCode/01-Book_system/front_book_repo/src/components/registerForm.jsx\";\nimport React, { useState } from \"react\";\nimport Joi from \"joi-browser\";\nimport { register } from \"../services/userServices\";\nimport Form from \"./common/form\";\n\nconst RegisterForm = ({\n  history\n}) => {\n  const _useState = useState({\n    username: \"\",\n    email: \"\",\n    emailConfirmation: \"\",\n    password: \"\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        user = _useState2[0],\n        setUser = _useState2[1];\n\n  const _useState3 = useState({}),\n        _useState4 = _slicedToArray(_useState3, 2),\n        errors = _useState4[0],\n        setErrors = _useState4[1];\n\n  const schema = {\n    username: Joi.string().required(),\n    email: Joi.string().required(),\n    emailConfirmation: Joi.string().required(),\n    password: Joi.string().required()\n  };\n\n  async function doSubmit() {\n    await register(user);\n    history.push(\"/login\");\n  }\n\n  return React.createElement(\"form\", {\n    onSubmit: e => handleSubmit(e, setErrors, user, schema, doSubmit),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, renderInput(\"username\", \"Username\", user, setUser, errors, setErrors, schema), renderInput(\"email\", \"Email\", user, setUser, errors, setErrors, schema), renderInput(\"emailConfirmation\", \"Email Confirmation\", user, setUser, errors, setErrors, schema), renderInput(\"password\", \"Password\", user, setUser, errors, setErrors, schema, \"password\"), renderButton(\"Login\", user, schema));\n};\n\nexport default RegisterForm;","map":{"version":3,"sources":["/home/balaclava/Desktop/Javascript/react/100daysCode/01-Book_system/front_book_repo/src/components/registerForm.jsx"],"names":["React","useState","Joi","register","Form","RegisterForm","history","username","email","emailConfirmation","password","user","setUser","errors","setErrors","schema","string","required","doSubmit","push","e","handleSubmit","renderInput","renderButton"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,SAASC,QAAT,QAAyB,0BAAzB;AACA,OAAOC,IAAP,MAAiB,eAAjB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAAA,oBACZL,QAAQ,CAAC;AAC/BM,IAAAA,QAAQ,EAAE,EADqB;AAE/BC,IAAAA,KAAK,EAAE,EAFwB;AAG/BC,IAAAA,iBAAiB,EAAE,EAHY;AAI/BC,IAAAA,QAAQ,EAAE;AAJqB,GAAD,CADI;AAAA;AAAA,QAC7BC,IAD6B;AAAA,QACvBC,OADuB;;AAAA,qBAORX,QAAQ,CAAC,EAAD,CAPA;AAAA;AAAA,QAO7BY,MAP6B;AAAA,QAOrBC,SAPqB;;AASpC,QAAMC,MAAM,GAAG;AACbR,IAAAA,QAAQ,EAAEL,GAAG,CAACc,MAAJ,GAAaC,QAAb,EADG;AAEbT,IAAAA,KAAK,EAAEN,GAAG,CAACc,MAAJ,GAAaC,QAAb,EAFM;AAGbR,IAAAA,iBAAiB,EAAEP,GAAG,CAACc,MAAJ,GAAaC,QAAb,EAHN;AAIbP,IAAAA,QAAQ,EAAER,GAAG,CAACc,MAAJ,GAAaC,QAAb;AAJG,GAAf;;AAOA,iBAAeC,QAAf,GAA0B;AACxB,UAAMf,QAAQ,CAACQ,IAAD,CAAd;AACAL,IAAAA,OAAO,CAACa,IAAR,CAAa,QAAb;AACD;;AAED,SACE;AAAM,IAAA,QAAQ,EAAEC,CAAC,IAAIC,YAAY,CAACD,CAAD,EAAIN,SAAJ,EAAeH,IAAf,EAAqBI,MAArB,EAA6BG,QAA7B,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGI,WAAW,CACV,UADU,EAEV,UAFU,EAGVX,IAHU,EAIVC,OAJU,EAKVC,MALU,EAMVC,SANU,EAOVC,MAPU,CADd,EAUGO,WAAW,CAAC,OAAD,EAAU,OAAV,EAAmBX,IAAnB,EAAyBC,OAAzB,EAAkCC,MAAlC,EAA0CC,SAA1C,EAAqDC,MAArD,CAVd,EAWGO,WAAW,CACV,mBADU,EAEV,oBAFU,EAGVX,IAHU,EAIVC,OAJU,EAKVC,MALU,EAMVC,SANU,EAOVC,MAPU,CAXd,EAoBGO,WAAW,CACV,UADU,EAEV,UAFU,EAGVX,IAHU,EAIVC,OAJU,EAKVC,MALU,EAMVC,SANU,EAOVC,MAPU,EAQV,UARU,CApBd,EA8BGQ,YAAY,CAAC,OAAD,EAAUZ,IAAV,EAAgBI,MAAhB,CA9Bf,CADF;AAkCD,CAvDD;;AAyDA,eAAeV,YAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Joi from \"joi-browser\";\n\nimport { register } from \"../services/userServices\";\nimport Form from \"./common/form\";\n\nconst RegisterForm = ({ history }) => {\n  const [user, setUser] = useState({\n    username: \"\",\n    email: \"\",\n    emailConfirmation: \"\",\n    password: \"\"\n  });\n  const [errors, setErrors] = useState({});\n\n  const schema = {\n    username: Joi.string().required(),\n    email: Joi.string().required(),\n    emailConfirmation: Joi.string().required(),\n    password: Joi.string().required()\n  };\n\n  async function doSubmit() {\n    await register(user);\n    history.push(\"/login\");\n  }\n\n  return (\n    <form onSubmit={e => handleSubmit(e, setErrors, user, schema, doSubmit)}>\n      {renderInput(\n        \"username\",\n        \"Username\",\n        user,\n        setUser,\n        errors,\n        setErrors,\n        schema\n      )}\n      {renderInput(\"email\", \"Email\", user, setUser, errors, setErrors, schema)}\n      {renderInput(\n        \"emailConfirmation\",\n        \"Email Confirmation\",\n        user,\n        setUser,\n        errors,\n        setErrors,\n        schema\n      )}\n      {renderInput(\n        \"password\",\n        \"Password\",\n        user,\n        setUser,\n        errors,\n        setErrors,\n        schema,\n        \"password\"\n      )}\n      {renderButton(\"Login\", user, schema)}\n    </form>\n  );\n};\n\nexport default RegisterForm;\n"]},"metadata":{},"sourceType":"module"}