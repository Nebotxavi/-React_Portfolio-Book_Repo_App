{"ast":null,"code":"import _objectSpread from \"/home/balaclava/Desktop/Javascript/react/100daysCode/01-Book_system/front_book_repo/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/balaclava/Desktop/Javascript/react/100daysCode/01-Book_system/front_book_repo/src/components/common/form.jsx\";\nimport React from \"react\";\nimport Joi from \"joi-browser\";\nimport Input from \"./input\";\nimport Select from \"./select\";\n\nconst Form = () => {\n  //   function validate() {\n  //     const options = { abortEarly: false };\n  //     const { error } = Joi.validate(user, schema, options);\n  //     if (!error) return null;\n  //     const errors = {};\n  //     for (let item of error.details) errors[item.path[0]] = item.message;\n  //     return errors;\n  //   }\n  //   function validateProperty({ name, value }) {\n  //     const obj = { [name]: value };\n  //     const propertySchema = { [name]: schema[name] };\n  //     const { error } = Joi.validate(obj, propertySchema);\n  //     return error ? error.details[0].message : null;\n  //   }\n  function handleChange({\n    currentTarget: input\n  }, errors) {\n    const allErrors = errors;\n    const errorMessage = validateProperty(input);\n    if (errorMessage) allErrors[input.name] = errorMessage;else delete allErrors[input.name];\n    setErrors(allErrors);\n    setUser(_objectSpread({}, user, {\n      [input.name]: input.value\n    }));\n  } //   function handleSubmit(e) {\n  //     e.preventDefault();\n  //     const errors = validate();\n  //     setErrors(errors || {});\n  //     if (errors) return;\n  //   }\n  //   function renderButton(label) {\n  //     return (\n  //       <button type=\"submit\" className=\"btn btn-primary\" disabled={validate()}>\n  //         {label}\n  //       </button>\n  //     );\n  //   }\n  //   function renderSelect(name, label) {\n  //     return (\n  //       <Select\n  //         name={name}\n  //         label={label}\n  //         options={genres}\n  //         item={book}\n  //         setItem={setBook}\n  //         handleChange={handleChange}\n  //         error={errors[name]}\n  //       />\n  //     );\n  //   }\n\n\n  function renderInput(name, label, data, setData, errors, setErrors, type = \"text\") {\n    return React.createElement(Input, {\n      name: name,\n      label: label,\n      type: type,\n      item: data,\n      setItem: setData,\n      handleChange: e => handleChange(e, errors, setErrors),\n      error: errors[name],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    });\n  }\n};\n\nexport default Form;","map":{"version":3,"sources":["/home/balaclava/Desktop/Javascript/react/100daysCode/01-Book_system/front_book_repo/src/components/common/form.jsx"],"names":["React","Joi","Input","Select","Form","handleChange","currentTarget","input","errors","allErrors","errorMessage","validateProperty","name","setErrors","setUser","user","value","renderInput","label","data","setData","type","e"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA,WAASC,YAAT,CAAsB;AAAEC,IAAAA,aAAa,EAAEC;AAAjB,GAAtB,EAAgDC,MAAhD,EAAwD;AACtD,UAAMC,SAAS,GAAGD,MAAlB;AACA,UAAME,YAAY,GAAGC,gBAAgB,CAACJ,KAAD,CAArC;AACA,QAAIG,YAAJ,EAAkBD,SAAS,CAACF,KAAK,CAACK,IAAP,CAAT,GAAwBF,YAAxB,CAAlB,KACK,OAAOD,SAAS,CAACF,KAAK,CAACK,IAAP,CAAhB;AAELC,IAAAA,SAAS,CAACJ,SAAD,CAAT;AACAK,IAAAA,OAAO,mBAAMC,IAAN;AAAY,OAACR,KAAK,CAACK,IAAP,GAAcL,KAAK,CAACS;AAAhC,OAAP;AACD,GA3BgB,CA6BjB;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,WAASC,WAAT,CACEL,IADF,EAEEM,KAFF,EAGEC,IAHF,EAIEC,OAJF,EAKEZ,MALF,EAMEK,SANF,EAOEQ,IAAI,GAAG,MAPT,EAQE;AACA,WACE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAET,IADR;AAEE,MAAA,KAAK,EAAEM,KAFT;AAGE,MAAA,IAAI,EAAEG,IAHR;AAIE,MAAA,IAAI,EAAEF,IAJR;AAKE,MAAA,OAAO,EAAEC,OALX;AAME,MAAA,YAAY,EAAEE,CAAC,IAAIjB,YAAY,CAACiB,CAAD,EAAId,MAAJ,EAAYK,SAAZ,CANjC;AAOE,MAAA,KAAK,EAAEL,MAAM,CAACI,IAAD,CAPf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAWD;AACF,CAhFD;;AAkFA,eAAeR,IAAf","sourcesContent":["import React from \"react\";\nimport Joi from \"joi-browser\";\n\nimport Input from \"./input\";\nimport Select from \"./select\";\n\nconst Form = () => {\n  //   function validate() {\n  //     const options = { abortEarly: false };\n  //     const { error } = Joi.validate(user, schema, options);\n  //     if (!error) return null;\n\n  //     const errors = {};\n  //     for (let item of error.details) errors[item.path[0]] = item.message;\n  //     return errors;\n  //   }\n\n  //   function validateProperty({ name, value }) {\n  //     const obj = { [name]: value };\n  //     const propertySchema = { [name]: schema[name] };\n  //     const { error } = Joi.validate(obj, propertySchema);\n\n  //     return error ? error.details[0].message : null;\n  //   }\n\n  function handleChange({ currentTarget: input }, errors) {\n    const allErrors = errors;\n    const errorMessage = validateProperty(input);\n    if (errorMessage) allErrors[input.name] = errorMessage;\n    else delete allErrors[input.name];\n\n    setErrors(allErrors);\n    setUser({ ...user, [input.name]: input.value });\n  }\n\n  //   function handleSubmit(e) {\n  //     e.preventDefault();\n\n  //     const errors = validate();\n  //     setErrors(errors || {});\n  //     if (errors) return;\n  //   }\n\n  //   function renderButton(label) {\n  //     return (\n  //       <button type=\"submit\" className=\"btn btn-primary\" disabled={validate()}>\n  //         {label}\n  //       </button>\n  //     );\n  //   }\n\n  //   function renderSelect(name, label) {\n  //     return (\n  //       <Select\n  //         name={name}\n  //         label={label}\n  //         options={genres}\n  //         item={book}\n  //         setItem={setBook}\n  //         handleChange={handleChange}\n  //         error={errors[name]}\n  //       />\n  //     );\n  //   }\n\n  function renderInput(\n    name,\n    label,\n    data,\n    setData,\n    errors,\n    setErrors,\n    type = \"text\"\n  ) {\n    return (\n      <Input\n        name={name}\n        label={label}\n        type={type}\n        item={data}\n        setItem={setData}\n        handleChange={e => handleChange(e, errors, setErrors)}\n        error={errors[name]}\n      />\n    );\n  }\n};\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}