{"ast":null,"code":"import _slicedToArray from \"/home/balaclava/Desktop/Javascript/react/100daysCode/01-Book_system/front_book_repo/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/balaclava/Desktop/Javascript/react/100daysCode/01-Book_system/front_book_repo/src/components/registerForm.jsx\";\nimport React, { useState } from \"react\";\nimport Joi from \"joi-browser\";\nimport { register } from \"../services/userServices\";\nimport Form from \"./common/form\";\n\nconst RegisterForm = ({\n  history\n}) => {\n  const _useState = useState({\n    username: \"\",\n    email: \"\",\n    emailConfirmation: \"\",\n    password: \"\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        user = _useState2[0],\n        setUser = _useState2[1];\n\n  const _useState3 = useState({}),\n        _useState4 = _slicedToArray(_useState3, 2),\n        errors = _useState4[0],\n        setErrors = _useState4[1];\n\n  const schema = {\n    username: Joi.string().required(),\n    email: Joi.string().required(),\n    emailConfirmation: Joi.string().required(),\n    password: Joi.string().required()\n  };\n  const inputList = [{\n    name: \"username\",\n    label: \"Username\",\n    value: user.username\n  }, {\n    name: \"email\",\n    label: \"Email\",\n    value: user.email\n  }, {\n    name: \"emailConfirmation\",\n    label: \"Email confirmation\",\n    value: user.emailConfirmation\n  }, {\n    name: \"password\",\n    label: \"Password\",\n    value: user.password\n  }];\n\n  async function doSubmit() {\n    await register(user);\n    history.push(\"/login\");\n  }\n\n  return React.createElement(Form, {\n    inputLIst: inputList,\n    setData: setUser,\n    errors: errors,\n    setErrors: setErrors,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  });\n};\n\nexport default RegisterForm;","map":{"version":3,"sources":["/home/balaclava/Desktop/Javascript/react/100daysCode/01-Book_system/front_book_repo/src/components/registerForm.jsx"],"names":["React","useState","Joi","register","Form","RegisterForm","history","username","email","emailConfirmation","password","user","setUser","errors","setErrors","schema","string","required","inputList","name","label","value","doSubmit","push"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,SAASC,QAAT,QAAyB,0BAAzB;AACA,OAAOC,IAAP,MAAiB,eAAjB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAAA,oBACZL,QAAQ,CAAC;AAC/BM,IAAAA,QAAQ,EAAE,EADqB;AAE/BC,IAAAA,KAAK,EAAE,EAFwB;AAG/BC,IAAAA,iBAAiB,EAAE,EAHY;AAI/BC,IAAAA,QAAQ,EAAE;AAJqB,GAAD,CADI;AAAA;AAAA,QAC7BC,IAD6B;AAAA,QACvBC,OADuB;;AAAA,qBAORX,QAAQ,CAAC,EAAD,CAPA;AAAA;AAAA,QAO7BY,MAP6B;AAAA,QAOrBC,SAPqB;;AASpC,QAAMC,MAAM,GAAG;AACbR,IAAAA,QAAQ,EAAEL,GAAG,CAACc,MAAJ,GAAaC,QAAb,EADG;AAEbT,IAAAA,KAAK,EAAEN,GAAG,CAACc,MAAJ,GAAaC,QAAb,EAFM;AAGbR,IAAAA,iBAAiB,EAAEP,GAAG,CAACc,MAAJ,GAAaC,QAAb,EAHN;AAIbP,IAAAA,QAAQ,EAAER,GAAG,CAACc,MAAJ,GAAaC,QAAb;AAJG,GAAf;AAOA,QAAMC,SAAS,GAAG,CAChB;AAAEC,IAAAA,IAAI,EAAE,UAAR;AAAoBC,IAAAA,KAAK,EAAE,UAA3B;AAAuCC,IAAAA,KAAK,EAAEV,IAAI,CAACJ;AAAnD,GADgB,EAEhB;AAAEY,IAAAA,IAAI,EAAE,OAAR;AAAiBC,IAAAA,KAAK,EAAE,OAAxB;AAAiCC,IAAAA,KAAK,EAAEV,IAAI,CAACH;AAA7C,GAFgB,EAGhB;AACEW,IAAAA,IAAI,EAAE,mBADR;AAEEC,IAAAA,KAAK,EAAE,oBAFT;AAGEC,IAAAA,KAAK,EAAEV,IAAI,CAACF;AAHd,GAHgB,EAQhB;AAAEU,IAAAA,IAAI,EAAE,UAAR;AAAoBC,IAAAA,KAAK,EAAE,UAA3B;AAAuCC,IAAAA,KAAK,EAAEV,IAAI,CAACD;AAAnD,GARgB,CAAlB;;AAWA,iBAAeY,QAAf,GAA0B;AACxB,UAAMnB,QAAQ,CAACQ,IAAD,CAAd;AACAL,IAAAA,OAAO,CAACiB,IAAR,CAAa,QAAb;AACD;;AAED,SACE,oBAAC,IAAD;AACE,IAAA,SAAS,EAAEL,SADb;AAEE,IAAA,OAAO,EAAEN,OAFX;AAGE,IAAA,MAAM,EAAEC,MAHV;AAIE,IAAA,SAAS,EAAEC,SAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAQD,CAxCD;;AA0CA,eAAeT,YAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Joi from \"joi-browser\";\n\nimport { register } from \"../services/userServices\";\nimport Form from \"./common/form\";\n\nconst RegisterForm = ({ history }) => {\n  const [user, setUser] = useState({\n    username: \"\",\n    email: \"\",\n    emailConfirmation: \"\",\n    password: \"\"\n  });\n  const [errors, setErrors] = useState({});\n\n  const schema = {\n    username: Joi.string().required(),\n    email: Joi.string().required(),\n    emailConfirmation: Joi.string().required(),\n    password: Joi.string().required()\n  };\n\n  const inputList = [\n    { name: \"username\", label: \"Username\", value: user.username },\n    { name: \"email\", label: \"Email\", value: user.email },\n    {\n      name: \"emailConfirmation\",\n      label: \"Email confirmation\",\n      value: user.emailConfirmation\n    },\n    { name: \"password\", label: \"Password\", value: user.password }\n  ];\n\n  async function doSubmit() {\n    await register(user);\n    history.push(\"/login\");\n  }\n\n  return (\n    <Form\n      inputLIst={inputList}\n      setData={setUser}\n      errors={errors}\n      setErrors={setErrors}\n    />\n  );\n};\n\nexport default RegisterForm;\n"]},"metadata":{},"sourceType":"module"}