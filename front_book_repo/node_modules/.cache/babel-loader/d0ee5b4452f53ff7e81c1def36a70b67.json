{"ast":null,"code":"import _slicedToArray from \"/home/balaclava/Desktop/Javascript/react/100daysCode/01-Book_system/front_book_repo/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/balaclava/Desktop/Javascript/react/100daysCode/01-Book_system/front_book_repo/src/components/books.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport _ from \"lodash\";\nimport BooksTable from \"./booksTable\";\nimport FilterMenu from \"./common/filterMenu\";\nimport NewButton from \"./common/newButton\";\nimport Pagination from \"./common/pagination\";\nimport SearchBar from \"./common/searchBar\";\nimport Summary from \"./summary\";\nimport { getBooks, deleteBook } from \"../services/booksService\";\nimport { getGenres } from \"../services/genresService\";\nimport { paginate } from \"../utils/paginate\";\n\nconst Books = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        books = _useState2[0],\n        setBooks = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        currentGenre = _useState4[0],\n        setCurrentGenre = _useState4[1];\n\n  const _useState5 = useState(1),\n        _useState6 = _slicedToArray(_useState5, 2),\n        currentPage = _useState6[0],\n        setCurrentPage = _useState6[1];\n\n  const _useState7 = useState([]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        genres = _useState8[0],\n        setGenres = _useState8[1];\n\n  const _useState9 = useState(\"\"),\n        _useState10 = _slicedToArray(_useState9, 2),\n        query = _useState10[0],\n        setQuery = _useState10[1];\n\n  const _useState11 = useState({\n    path: \"title\",\n    order: \"asc\"\n  }),\n        _useState12 = _slicedToArray(_useState11, 2),\n        sortColumn = _useState12[0],\n        setSortColumn = _useState12[1];\n\n  const pageSize = 4;\n\n  const _getPagedData = getPagedData(),\n        booksToRender = _getPagedData.booksToRender,\n        totalCount = _getPagedData.totalCount;\n\n  useEffect(() => {\n    let isSubscribed = true;\n\n    async function fetchData() {\n      const genres = await getGenres();\n\n      if (isSubscribed) {\n        setGenres([{\n          name: \"All Genres\"\n        }, ...genres]);\n      }\n\n      const books = await getBooks();\n\n      if (isSubscribed) {\n        setBooks(books);\n      }\n    }\n\n    fetchData();\n    return () => {\n      isSubscribed = false;\n    };\n  }, []);\n\n  async function handleDelete({\n    id\n  }) {\n    const originalBooks = books;\n    const updatedBooks = originalBooks.filter(book => book.id !== id);\n\n    try {\n      await deleteBook(id);\n    } catch (ex) {}\n  }\n\n  function getFilteredBooks() {\n    return currentGenre && currentGenre.id ? books.filter(book => book.genre === currentGenre.name) : query ? books.filter(book => book.title.toLowerCase().startsWith(query)) : books;\n  }\n\n  function getSortedBooks(books) {\n    return _.orderBy(books, [sortColumn.path], [sortColumn.order]);\n  }\n\n  function getPagedData() {\n    const filteredBooks = getFilteredBooks();\n    const sortedBooks = getSortedBooks(filteredBooks);\n    return {\n      booksToRender: paginate(sortedBooks, currentPage, pageSize),\n      totalCount: filteredBooks.length\n    };\n  }\n\n  return React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(FilterMenu, {\n    items: genres,\n    currentItem: currentGenre,\n    handleClick: setCurrentGenre,\n    setCurrentPage: setCurrentPage,\n    setQuery: setQuery,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(NewButton, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), React.createElement(Summary, {\n    count: totalCount,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), React.createElement(SearchBar, {\n    query: query,\n    setQuery: setQuery,\n    setCurrentPage: setCurrentPage,\n    setCurrentGenre: setCurrentGenre,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }), React.createElement(BooksTable, {\n    books: booksToRender,\n    sortColumn: sortColumn,\n    setSortColumn: setSortColumn,\n    handleDelete: handleDelete,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }), React.createElement(Pagination, {\n    pageSize: pageSize,\n    itemsAmount: totalCount,\n    setCurrentPage: setCurrentPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  })));\n};\n\nexport default Books;","map":{"version":3,"sources":["/home/balaclava/Desktop/Javascript/react/100daysCode/01-Book_system/front_book_repo/src/components/books.jsx"],"names":["React","useState","useEffect","_","BooksTable","FilterMenu","NewButton","Pagination","SearchBar","Summary","getBooks","deleteBook","getGenres","paginate","Books","books","setBooks","currentGenre","setCurrentGenre","currentPage","setCurrentPage","genres","setGenres","query","setQuery","path","order","sortColumn","setSortColumn","pageSize","getPagedData","booksToRender","totalCount","isSubscribed","fetchData","name","handleDelete","id","originalBooks","updatedBooks","filter","book","ex","getFilteredBooks","genre","title","toLowerCase","startsWith","getSortedBooks","orderBy","filteredBooks","sortedBooks","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport _ from \"lodash\";\n\nimport BooksTable from \"./booksTable\";\nimport FilterMenu from \"./common/filterMenu\";\nimport NewButton from \"./common/newButton\";\nimport Pagination from \"./common/pagination\";\nimport SearchBar from \"./common/searchBar\";\nimport Summary from \"./summary\";\n\nimport { getBooks, deleteBook } from \"../services/booksService\";\nimport { getGenres } from \"../services/genresService\";\nimport { paginate } from \"../utils/paginate\";\n\nconst Books = () => {\n  const [books, setBooks] = useState([]);\n  const [currentGenre, setCurrentGenre] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const [genres, setGenres] = useState([]);\n  const [query, setQuery] = useState(\"\");\n  const [sortColumn, setSortColumn] = useState({\n    path: \"title\",\n    order: \"asc\"\n  });\n\n  const pageSize = 4;\n  const { booksToRender, totalCount } = getPagedData();\n\n  useEffect(() => {\n    let isSubscribed = true;\n    async function fetchData() {\n      const genres = await getGenres();\n      if (isSubscribed) {\n        setGenres([{ name: \"All Genres\" }, ...genres]);\n      }\n      const books = await getBooks();\n      if (isSubscribed) {\n        setBooks(books);\n      }\n    }\n    fetchData();\n    return () => {\n      isSubscribed = false;\n    };\n  }, []);\n\n  async function handleDelete({ id }) {\n    const originalBooks = books;\n    const updatedBooks = originalBooks.filter(book => book.id !== id);\n    try {\n      await deleteBook(id);\n    } catch (ex) {}\n  }\n\n  function getFilteredBooks() {\n    return currentGenre && currentGenre.id\n      ? books.filter(book => book.genre === currentGenre.name)\n      : query\n      ? books.filter(book => book.title.toLowerCase().startsWith(query))\n      : books;\n  }\n\n  function getSortedBooks(books) {\n    return _.orderBy(books, [sortColumn.path], [sortColumn.order]);\n  }\n\n  function getPagedData() {\n    const filteredBooks = getFilteredBooks();\n    const sortedBooks = getSortedBooks(filteredBooks);\n    return {\n      booksToRender: paginate(sortedBooks, currentPage, pageSize),\n      totalCount: filteredBooks.length\n    };\n  }\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-2\">\n        <FilterMenu\n          items={genres}\n          currentItem={currentGenre}\n          handleClick={setCurrentGenre}\n          setCurrentPage={setCurrentPage}\n          setQuery={setQuery}\n        />\n      </div>\n      <div className=\"col\">\n        <NewButton />\n        <Summary count={totalCount} />\n        <SearchBar\n          query={query}\n          setQuery={setQuery}\n          setCurrentPage={setCurrentPage}\n          setCurrentGenre={setCurrentGenre}\n        />\n        <BooksTable\n          books={booksToRender}\n          sortColumn={sortColumn}\n          setSortColumn={setSortColumn}\n          handleDelete={handleDelete}\n        />\n        <Pagination\n          pageSize={pageSize}\n          itemsAmount={totalCount}\n          setCurrentPage={setCurrentPage}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Books;\n"]},"metadata":{},"sourceType":"module"}