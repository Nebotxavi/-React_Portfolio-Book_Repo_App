{"ast":null,"code":"import _objectSpread from \"/home/balaclava/Desktop/Javascript/react/100daysCode/01-Book_system/front_book_repo/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/balaclava/Desktop/Javascript/react/100daysCode/01-Book_system/front_book_repo/src/components/common/form.jsx\";\nimport React from \"react\";\nimport Joi from \"joi-browser\";\nimport Input from \"./input\";\nimport Select from \"./select\"; //   export function validate() {\n//     const options = { abortEarly: false };\n//     const { error } = Joi.validate(data, schema, options);\n//     if (!error) return null;\n//     const errors = {};\n//     for (let item of error.details) errors[item.path[0]] = item.message;\n//     return errors;\n//   }\n\nexport function validateProperty({\n  name,\n  value\n}, schema) {\n  const obj = {\n    [name]: value\n  };\n  const propertySchema = {\n    [name]: schema[name]\n  };\n\n  const _Joi$validate = Joi.validate(obj, propertySchema),\n        error = _Joi$validate.error;\n\n  return error ? error.details[0].message : null;\n}\nexport function handleChange({\n  currentTarget: input\n}, errors, setErrors, data, setData, schema) {\n  const allErrors = errors;\n  const errorMessage = validateProperty(input, schema);\n  if (errorMessage) allErrors[input.name] = errorMessage;else delete allErrors[input.name];\n  setErrors(allErrors);\n  setData(_objectSpread({}, data, {\n    [input.name]: input.value\n  }));\n} //   export function handleSubmit(e) {\n//     e.preventDefault();\n//     const errors = validate();\n//     setErrors(errors || {});\n//     if (errors) return;\n//   }\n//   export function renderButton(label) {\n//     return (\n//       <button type=\"submit\" className=\"btn btn-primary\" disabled={validate()}>\n//         {label}\n//       </button>\n//     );\n//   }\n//   export function renderSelect(name, label) {\n//     return (\n//       <Select\n//         name={name}\n//         label={label}\n//         options={genres}\n//         item={book}\n//         setItem={setBook}\n//         handleChange={handleChange}\n//         error={errors[name]}\n//       />\n//     );\n//   }\n\nexport function renderInput(name, label, data, setData, errors, setErrors, schema, type = \"text\") {\n  return React.createElement(Input, {\n    name: name,\n    label: label,\n    type: type,\n    item: data,\n    setItem: setData,\n    handleChange: e => handleChange(e, errors, setErrors, data, setData, schema),\n    error: errors[name],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  });\n}","map":{"version":3,"sources":["/home/balaclava/Desktop/Javascript/react/100daysCode/01-Book_system/front_book_repo/src/components/common/form.jsx"],"names":["React","Joi","Input","Select","validateProperty","name","value","schema","obj","propertySchema","validate","error","details","message","handleChange","currentTarget","input","errors","setErrors","data","setData","allErrors","errorMessage","renderInput","label","type","e"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB,C,CAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,gBAAT,CAA0B;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAA1B,EAA2CC,MAA3C,EAAmD;AACxD,QAAMC,GAAG,GAAG;AAAE,KAACH,IAAD,GAAQC;AAAV,GAAZ;AACA,QAAMG,cAAc,GAAG;AAAE,KAACJ,IAAD,GAAQE,MAAM,CAACF,IAAD;AAAhB,GAAvB;;AAFwD,wBAGtCJ,GAAG,CAACS,QAAJ,CAAaF,GAAb,EAAkBC,cAAlB,CAHsC;AAAA,QAGhDE,KAHgD,iBAGhDA,KAHgD;;AAKxD,SAAOA,KAAK,GAAGA,KAAK,CAACC,OAAN,CAAc,CAAd,EAAiBC,OAApB,GAA8B,IAA1C;AACD;AAED,OAAO,SAASC,YAAT,CACL;AAAEC,EAAAA,aAAa,EAAEC;AAAjB,CADK,EAELC,MAFK,EAGLC,SAHK,EAILC,IAJK,EAKLC,OALK,EAMLb,MANK,EAOL;AACA,QAAMc,SAAS,GAAGJ,MAAlB;AACA,QAAMK,YAAY,GAAGlB,gBAAgB,CAACY,KAAD,EAAQT,MAAR,CAArC;AACA,MAAIe,YAAJ,EAAkBD,SAAS,CAACL,KAAK,CAACX,IAAP,CAAT,GAAwBiB,YAAxB,CAAlB,KACK,OAAOD,SAAS,CAACL,KAAK,CAACX,IAAP,CAAhB;AAELa,EAAAA,SAAS,CAACG,SAAD,CAAT;AACAD,EAAAA,OAAO,mBAAMD,IAAN;AAAY,KAACH,KAAK,CAACX,IAAP,GAAcW,KAAK,CAACV;AAAhC,KAAP;AACD,C,CAED;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASiB,WAAT,CACLlB,IADK,EAELmB,KAFK,EAGLL,IAHK,EAILC,OAJK,EAKLH,MALK,EAMLC,SANK,EAOLX,MAPK,EAQLkB,IAAI,GAAG,MARF,EASL;AACA,SACE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAEpB,IADR;AAEE,IAAA,KAAK,EAAEmB,KAFT;AAGE,IAAA,IAAI,EAAEC,IAHR;AAIE,IAAA,IAAI,EAAEN,IAJR;AAKE,IAAA,OAAO,EAAEC,OALX;AAME,IAAA,YAAY,EAAEM,CAAC,IACbZ,YAAY,CAACY,CAAD,EAAIT,MAAJ,EAAYC,SAAZ,EAAuBC,IAAvB,EAA6BC,OAA7B,EAAsCb,MAAtC,CAPhB;AASE,IAAA,KAAK,EAAEU,MAAM,CAACZ,IAAD,CATf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAaD","sourcesContent":["import React from \"react\";\nimport Joi from \"joi-browser\";\n\nimport Input from \"./input\";\nimport Select from \"./select\";\n\n//   export function validate() {\n//     const options = { abortEarly: false };\n//     const { error } = Joi.validate(data, schema, options);\n//     if (!error) return null;\n\n//     const errors = {};\n//     for (let item of error.details) errors[item.path[0]] = item.message;\n//     return errors;\n//   }\n\nexport function validateProperty({ name, value }, schema) {\n  const obj = { [name]: value };\n  const propertySchema = { [name]: schema[name] };\n  const { error } = Joi.validate(obj, propertySchema);\n\n  return error ? error.details[0].message : null;\n}\n\nexport function handleChange(\n  { currentTarget: input },\n  errors,\n  setErrors,\n  data,\n  setData,\n  schema\n) {\n  const allErrors = errors;\n  const errorMessage = validateProperty(input, schema);\n  if (errorMessage) allErrors[input.name] = errorMessage;\n  else delete allErrors[input.name];\n\n  setErrors(allErrors);\n  setData({ ...data, [input.name]: input.value });\n}\n\n//   export function handleSubmit(e) {\n//     e.preventDefault();\n\n//     const errors = validate();\n//     setErrors(errors || {});\n//     if (errors) return;\n//   }\n\n//   export function renderButton(label) {\n//     return (\n//       <button type=\"submit\" className=\"btn btn-primary\" disabled={validate()}>\n//         {label}\n//       </button>\n//     );\n//   }\n\n//   export function renderSelect(name, label) {\n//     return (\n//       <Select\n//         name={name}\n//         label={label}\n//         options={genres}\n//         item={book}\n//         setItem={setBook}\n//         handleChange={handleChange}\n//         error={errors[name]}\n//       />\n//     );\n//   }\n\nexport function renderInput(\n  name,\n  label,\n  data,\n  setData,\n  errors,\n  setErrors,\n  schema,\n  type = \"text\"\n) {\n  return (\n    <Input\n      name={name}\n      label={label}\n      type={type}\n      item={data}\n      setItem={setData}\n      handleChange={e =>\n        handleChange(e, errors, setErrors, data, setData, schema)\n      }\n      error={errors[name]}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}