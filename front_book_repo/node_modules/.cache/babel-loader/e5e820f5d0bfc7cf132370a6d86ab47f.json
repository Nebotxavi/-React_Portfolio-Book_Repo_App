{"ast":null,"code":"import _slicedToArray from \"/home/balaclava/Desktop/Javascript/react/100daysCode/01-Book_system/front_book_repo/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/balaclava/Desktop/Javascript/react/100daysCode/01-Book_system/front_book_repo/src/components/books.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport BooksTable from \"./booksTable\";\nimport FilterMenu from \"./common/filterMenu\";\nimport NewButton from \"./common/newButton\";\nimport Pagination from \"./common/pagination\";\nimport SearchBar from \"./common/searchBar\";\nimport { getBooks } from \"../services/booksService\";\nimport { getGenres } from \"../services/genresService\";\nimport { paginate } from \"../utils/paginate\";\n\nconst Books = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        books = _useState2[0],\n        setBooks = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        currentGenre = _useState4[0],\n        setCurrentGenre = _useState4[1];\n\n  const _useState5 = useState(1),\n        _useState6 = _slicedToArray(_useState5, 2),\n        currentPage = _useState6[0],\n        setCurrentPage = _useState6[1];\n\n  const _useState7 = useState([]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        genres = _useState8[0],\n        setGenres = _useState8[1];\n\n  const _useState9 = useState(\"\"),\n        _useState10 = _slicedToArray(_useState9, 2),\n        query = _useState10[0],\n        setQuery = _useState10[1];\n\n  const pageSize = 2;\n\n  const _getPagedData = getPagedData(),\n        booksToRender = _getPagedData.booksToRender,\n        totalCount = _getPagedData.totalCount;\n\n  console.log(\"currenetPage\", currentPage, \"currentGenre\", currentGenre, \"Query\", query);\n  useEffect(() => {\n    let isSubscribed = true;\n\n    async function fetchData() {\n      const genres = await getGenres();\n\n      if (isSubscribed) {\n        setGenres([{\n          name: \"All Genres\"\n        }, ...genres]);\n      }\n\n      const books = await getBooks();\n\n      if (isSubscribed) {\n        setBooks(books);\n      }\n    }\n\n    fetchData();\n    return () => {\n      isSubscribed = false;\n    };\n  }, []); // Updates CurrentPage when the filter menu is used.\n  // useEffect(() => {\n  //   setCurrentPage(1);\n  //   setQuery(\"\");\n  // }, [currentGenre]);\n  // useEffect(() => {\n  //   setCurrentPage(1);\n  //   setCurrentGenre(\"\");\n  // }, [query]);\n\n  function getFilteredBooks() {\n    return currentGenre && currentGenre.id ? books.filter(book => book.genre === currentGenre.name) : query ? books.filter(book => book.title.toLowerCase().startsWith(query)) : books;\n  }\n\n  function getPagedData() {\n    const filteredBooks = getFilteredBooks();\n    return {\n      booksToRender: paginate(filteredBooks, currentPage, pageSize),\n      totalCount: filteredBooks.length\n    };\n  }\n\n  return React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(FilterMenu, {\n    items: genres,\n    currentItem: currentGenre,\n    handleClick: setCurrentGenre,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(NewButton, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), React.createElement(SearchBar, {\n    query: query,\n    setQuery: setQuery,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), React.createElement(BooksTable, {\n    books: booksToRender,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), React.createElement(Pagination, {\n    pageSize: pageSize,\n    itemsAmount: totalCount,\n    setCurrentPage: setCurrentPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  })));\n};\n\nexport default Books;","map":{"version":3,"sources":["/home/balaclava/Desktop/Javascript/react/100daysCode/01-Book_system/front_book_repo/src/components/books.jsx"],"names":["React","useState","useEffect","BooksTable","FilterMenu","NewButton","Pagination","SearchBar","getBooks","getGenres","paginate","Books","books","setBooks","currentGenre","setCurrentGenre","currentPage","setCurrentPage","genres","setGenres","query","setQuery","pageSize","getPagedData","booksToRender","totalCount","console","log","isSubscribed","fetchData","name","getFilteredBooks","id","filter","book","genre","title","toLowerCase","startsWith","filteredBooks","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport BooksTable from \"./booksTable\";\nimport FilterMenu from \"./common/filterMenu\";\nimport NewButton from \"./common/newButton\";\nimport Pagination from \"./common/pagination\";\nimport SearchBar from \"./common/searchBar\";\n\nimport { getBooks } from \"../services/booksService\";\nimport { getGenres } from \"../services/genresService\";\nimport { paginate } from \"../utils/paginate\";\n\nconst Books = () => {\n  const [books, setBooks] = useState([]);\n  const [currentGenre, setCurrentGenre] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const [genres, setGenres] = useState([]);\n  const [query, setQuery] = useState(\"\");\n\n  const pageSize = 2;\n  const { booksToRender, totalCount } = getPagedData();\n\n  console.log(\n    \"currenetPage\",\n    currentPage,\n    \"currentGenre\",\n    currentGenre,\n    \"Query\",\n    query\n  );\n\n  useEffect(() => {\n    let isSubscribed = true;\n    async function fetchData() {\n      const genres = await getGenres();\n      if (isSubscribed) {\n        setGenres([{ name: \"All Genres\" }, ...genres]);\n      }\n      const books = await getBooks();\n      if (isSubscribed) {\n        setBooks(books);\n      }\n    }\n    fetchData();\n    return () => {\n      isSubscribed = false;\n    };\n  }, []);\n\n  // Updates CurrentPage when the filter menu is used.\n  // useEffect(() => {\n  //   setCurrentPage(1);\n  //   setQuery(\"\");\n  // }, [currentGenre]);\n\n  // useEffect(() => {\n  //   setCurrentPage(1);\n  //   setCurrentGenre(\"\");\n  // }, [query]);\n\n  function getFilteredBooks() {\n    return currentGenre && currentGenre.id\n      ? books.filter(book => book.genre === currentGenre.name)\n      : query\n      ? books.filter(book => book.title.toLowerCase().startsWith(query))\n      : books;\n  }\n\n  function getPagedData() {\n    const filteredBooks = getFilteredBooks();\n    return {\n      booksToRender: paginate(filteredBooks, currentPage, pageSize),\n      totalCount: filteredBooks.length\n    };\n  }\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-2\">\n        <FilterMenu\n          items={genres}\n          currentItem={currentGenre}\n          handleClick={setCurrentGenre}\n        />\n      </div>\n      <div className=\"col\">\n        <NewButton />\n        <SearchBar query={query} setQuery={setQuery} />\n        <BooksTable books={booksToRender} />\n        <Pagination\n          pageSize={pageSize}\n          itemsAmount={totalCount}\n          setCurrentPage={setCurrentPage}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Books;\n"]},"metadata":{},"sourceType":"module"}