{"ast":null,"code":"import _objectSpread from \"/home/balaclava/Desktop/Javascript/react/100daysCode/01-Book_system/front_book_repo/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/balaclava/Desktop/Javascript/react/100daysCode/01-Book_system/front_book_repo/src/components/common/form.jsx\";\nimport React from \"react\";\nimport Joi from \"joi-browser\";\nimport Input from \"./input\"; // import Select from \"./select\";\n\nconst Form = ({\n  inputList,\n  setData,\n  setErrors,\n  schema\n}) => {\n  const validate = () => {\n    const options = {\n      abortEarly: false\n    };\n\n    const _Joi$validate = Joi.validate(data, schema, options),\n          error = _Joi$validate.error;\n\n    if (!error) return null;\n    const errors = {};\n\n    for (let item of error.details) errors[item.path[0]] = item.message;\n\n    return errors;\n  };\n\n  function validateProperty({\n    name,\n    value\n  }, schema) {\n    const obj = {\n      [name]: value\n    };\n    const propertySchema = {\n      [name]: schema[name]\n    };\n\n    const _Joi$validate2 = Joi.validate(obj, propertySchema),\n          error = _Joi$validate2.error;\n\n    return error ? error.details[0].message : null;\n  }\n\n  function handleChange({\n    currentTarget: input\n  }, errors, setErrors, data, setData, schema) {\n    const allErrors = errors;\n    const errorMessage = validateProperty(input, schema);\n    if (errorMessage) allErrors[input.name] = errorMessage;else delete allErrors[input.name];\n    setErrors(allErrors);\n    setData(_objectSpread({}, data, {\n      [input.name]: input.value\n    }));\n  }\n\n  function handleSubmit(e, setErrors, data, schema, doSubmit) {\n    e.preventDefault();\n    const errors = validate(data, schema);\n    setErrors(errors || {});\n    if (errors) return;\n    doSubmit();\n  }\n\n  function renderButton(label, data, schema) {\n    return React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      disabled: validate(data, schema),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, label);\n  } //    function renderSelect(name, label) {\n  //     return (\n  //       <Select\n  //         name={name}\n  //         label={label}\n  //         options={genres}\n  //         item={book}\n  //         setItem={setBook}\n  //         handleChange={handleChange}\n  //         error={errors[name]}\n  //       />\n  //     );\n  //   }\n\n\n  function renderInput(name, label, data, setData, errors, setErrors, schema, type = \"text\") {\n    return React.createElement(Input, {\n      name: name,\n      label: label,\n      type: type,\n      item: data,\n      setItem: setData,\n      handleChange: e => handleChange(e, errors, setErrors, data, setData, schema),\n      error: errors[name],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    });\n  }\n};\n\nexport default Form;","map":{"version":3,"sources":["/home/balaclava/Desktop/Javascript/react/100daysCode/01-Book_system/front_book_repo/src/components/common/form.jsx"],"names":["React","Joi","Input","Form","inputList","setData","setErrors","schema","validate","options","abortEarly","data","error","errors","item","details","path","message","validateProperty","name","value","obj","propertySchema","handleChange","currentTarget","input","allErrors","errorMessage","handleSubmit","e","doSubmit","preventDefault","renderButton","label","renderInput","type"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Joi from \"joi-browser\";\n\nimport Input from \"./input\";\n// import Select from \"./select\";\n\nconst Form = ({ inputList, setData, setErrors, schema }) => {\n  const validate = () => {\n    const options = { abortEarly: false };\n    const { error } = Joi.validate(data, schema, options);\n    if (!error) return null;\n\n    const errors = {};\n    for (let item of error.details) errors[item.path[0]] = item.message;\n    return errors;\n  };\n\n  function validateProperty({ name, value }, schema) {\n    const obj = { [name]: value };\n    const propertySchema = { [name]: schema[name] };\n    const { error } = Joi.validate(obj, propertySchema);\n\n    return error ? error.details[0].message : null;\n  }\n\n  function handleChange(\n    { currentTarget: input },\n    errors,\n    setErrors,\n    data,\n    setData,\n    schema\n  ) {\n    const allErrors = errors;\n    const errorMessage = validateProperty(input, schema);\n    if (errorMessage) allErrors[input.name] = errorMessage;\n    else delete allErrors[input.name];\n\n    setErrors(allErrors);\n    setData({ ...data, [input.name]: input.value });\n  }\n\n  function handleSubmit(e, setErrors, data, schema, doSubmit) {\n    e.preventDefault();\n\n    const errors = validate(data, schema);\n    setErrors(errors || {});\n    if (errors) return;\n\n    doSubmit();\n  }\n\n  function renderButton(label, data, schema) {\n    return (\n      <button\n        type=\"submit\"\n        className=\"btn btn-primary\"\n        disabled={validate(data, schema)}\n      >\n        {label}\n      </button>\n    );\n  }\n\n  //    function renderSelect(name, label) {\n  //     return (\n  //       <Select\n  //         name={name}\n  //         label={label}\n  //         options={genres}\n  //         item={book}\n  //         setItem={setBook}\n  //         handleChange={handleChange}\n  //         error={errors[name]}\n  //       />\n  //     );\n  //   }\n\n  function renderInput(\n    name,\n    label,\n    data,\n    setData,\n    errors,\n    setErrors,\n    schema,\n    type = \"text\"\n  ) {\n    return (\n      <Input\n        name={name}\n        label={label}\n        type={type}\n        item={data}\n        setItem={setData}\n        handleChange={e =>\n          handleChange(e, errors, setErrors, data, setData, schema)\n        }\n        error={errors[name]}\n      />\n    );\n  }\n};\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}