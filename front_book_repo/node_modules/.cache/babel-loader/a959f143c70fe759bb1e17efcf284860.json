{"ast":null,"code":"import http from \"./httpService\";\nimport axios from \"axios\";\nimport jwtDecode from \"jwt-decode\";\nconst apiEndpoint = \"users/token/\";\nconst tokenKey = \"token\";\nconsole.log(\"It is going to setJwt\");\nhttp.setJwt(getJwt());\nexport async function login({\n  username,\n  password\n}) {\n  const _ref = await http.post(apiEndpoint, {\n    username,\n    password\n  }),\n        token = _ref.data;\n\n  localStorage.setItem(tokenKey, token[tokenKey]);\n}\nexport async function refreshToken() {\n  if (!getJwt()) return;\n  const currentToken = getJwt();\n\n  const _ref2 = await http.post(apiEndpoint + \"refresh/\", {\n    token: currentToken\n  }),\n        token = _ref2.data;\n\n  localStorage.setItem(tokenKey, token[tokenKey]);\n}\nexport function logout() {\n  localStorage.removeItem(tokenKey);\n}\nexport function getJwt() {\n  const token = localStorage.getItem(tokenKey);\n  return token;\n}\nexport function getCurrentUser() {\n  try {\n    const token = getJwt();\n    const decodedToken = jwtDecode(token);\n    return decodedToken.username;\n  } catch (ex) {\n    return null;\n  }\n}","map":{"version":3,"sources":["/home/balaclava/Desktop/Javascript/react/100daysCode/01-Book_system/front_book_repo/src/services/authService.js"],"names":["http","axios","jwtDecode","apiEndpoint","tokenKey","console","log","setJwt","getJwt","login","username","password","post","token","data","localStorage","setItem","refreshToken","currentToken","logout","removeItem","getItem","getCurrentUser","decodedToken","ex"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,eAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,MAAMC,WAAW,GAAG,cAApB;AACA,MAAMC,QAAQ,GAAG,OAAjB;AAEAC,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACAN,IAAI,CAACO,MAAL,CAAYC,MAAM,EAAlB;AAEA,OAAO,eAAeC,KAAf,CAAqB;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAArB,EAA6C;AAAA,eAC1B,MAAMX,IAAI,CAACY,IAAL,CAAUT,WAAV,EAAuB;AACnDO,IAAAA,QADmD;AAEnDC,IAAAA;AAFmD,GAAvB,CADoB;AAAA,QACpCE,KADoC,QAC1CC,IAD0C;;AAKlDC,EAAAA,YAAY,CAACC,OAAb,CAAqBZ,QAArB,EAA+BS,KAAK,CAACT,QAAD,CAApC;AACD;AAED,OAAO,eAAea,YAAf,GAA8B;AACnC,MAAI,CAACT,MAAM,EAAX,EAAe;AACf,QAAMU,YAAY,GAAGV,MAAM,EAA3B;;AAFmC,gBAGX,MAAMR,IAAI,CAACY,IAAL,CAAUT,WAAW,GAAG,UAAxB,EAAoC;AAChEU,IAAAA,KAAK,EAAEK;AADyD,GAApC,CAHK;AAAA,QAGrBL,KAHqB,SAG3BC,IAH2B;;AAMnCC,EAAAA,YAAY,CAACC,OAAb,CAAqBZ,QAArB,EAA+BS,KAAK,CAACT,QAAD,CAApC;AACD;AAED,OAAO,SAASe,MAAT,GAAkB;AACvBJ,EAAAA,YAAY,CAACK,UAAb,CAAwBhB,QAAxB;AACD;AAED,OAAO,SAASI,MAAT,GAAkB;AACvB,QAAMK,KAAK,GAAGE,YAAY,CAACM,OAAb,CAAqBjB,QAArB,CAAd;AACA,SAAOS,KAAP;AACD;AAED,OAAO,SAASS,cAAT,GAA0B;AAC/B,MAAI;AACF,UAAMT,KAAK,GAAGL,MAAM,EAApB;AACA,UAAMe,YAAY,GAAGrB,SAAS,CAACW,KAAD,CAA9B;AACA,WAAOU,YAAY,CAACb,QAApB;AACD,GAJD,CAIE,OAAOc,EAAP,EAAW;AACX,WAAO,IAAP;AACD;AACF","sourcesContent":["import http from \"./httpService\";\nimport axios from \"axios\";\nimport jwtDecode from \"jwt-decode\";\n\nconst apiEndpoint = \"users/token/\";\nconst tokenKey = \"token\";\n\nconsole.log(\"It is going to setJwt\");\nhttp.setJwt(getJwt());\n\nexport async function login({ username, password }) {\n  const { data: token } = await http.post(apiEndpoint, {\n    username,\n    password\n  });\n  localStorage.setItem(tokenKey, token[tokenKey]);\n}\n\nexport async function refreshToken() {\n  if (!getJwt()) return;\n  const currentToken = getJwt();\n  const { data: token } = await http.post(apiEndpoint + \"refresh/\", {\n    token: currentToken\n  });\n  localStorage.setItem(tokenKey, token[tokenKey]);\n}\n\nexport function logout() {\n  localStorage.removeItem(tokenKey);\n}\n\nexport function getJwt() {\n  const token = localStorage.getItem(tokenKey);\n  return token;\n}\n\nexport function getCurrentUser() {\n  try {\n    const token = getJwt();\n    const decodedToken = jwtDecode(token);\n    return decodedToken.username;\n  } catch (ex) {\n    return null;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}