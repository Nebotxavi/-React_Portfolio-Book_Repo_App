{"ast":null,"code":"import _slicedToArray from \"/home/balaclava/Desktop/Javascript/react/100daysCode/01-Book_system/front_book_repo/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/balaclava/Desktop/Javascript/react/100daysCode/01-Book_system/front_book_repo/src/components/books.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport _ from \"lodash\";\nimport { Redirect } from \"react-router-dom\";\nimport BooksTable from \"./booksTable\";\nimport FilterMenu from \"./common/filterMenu\";\nimport NewButton from \"./common/newButton\";\nimport Pagination from \"./common/pagination\";\nimport SearchBar from \"./common/searchBar\";\nimport Summary from \"./summary\";\nimport { getBooks, deleteBook } from \"../services/booksService\";\nimport { getGenres } from \"../services/genresService\";\nimport { paginate } from \"../utils/paginate\";\nimport { toast } from \"react-toastify\";\n\nconst Books = ({\n  user\n}) => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        books = _useState2[0],\n        setBooks = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        currentGenre = _useState4[0],\n        setCurrentGenre = _useState4[1];\n\n  const _useState5 = useState(1),\n        _useState6 = _slicedToArray(_useState5, 2),\n        currentPage = _useState6[0],\n        setCurrentPage = _useState6[1];\n\n  const _useState7 = useState([]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        genres = _useState8[0],\n        setGenres = _useState8[1];\n\n  const _useState9 = useState(\"\"),\n        _useState10 = _slicedToArray(_useState9, 2),\n        query = _useState10[0],\n        setQuery = _useState10[1];\n\n  const _useState11 = useState({\n    path: \"title\",\n    order: \"asc\"\n  }),\n        _useState12 = _slicedToArray(_useState11, 2),\n        sortColumn = _useState12[0],\n        setSortColumn = _useState12[1];\n\n  const pageSize = 4;\n\n  const _getPagedData = getPagedData(),\n        booksToRender = _getPagedData.booksToRender,\n        totalCount = _getPagedData.totalCount;\n\n  const filteredBooks = getFilteredBooks();\n  useEffect(() => {\n    let shouldIgnore = false;\n\n    async function fetchData() {\n      try {\n        const genres = await getGenres();\n\n        if (!shouldIgnore) {\n          setGenres([{\n            name: \"All Genres\"\n          }, ...genres]);\n        }\n\n        const books = await getBooks();\n\n        if (!shouldIgnore) {\n          setBooks(books);\n        }\n      } catch (ex) {\n        console.log(\"into catch\");\n\n        if (ex.response.status === 401) {\n          //          toast.error(\"Your session may have expired, please login again\");\n          return React.createElement(Redirect, {\n            to: \"/logout\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 48\n            },\n            __self: this\n          });\n        }\n      }\n    }\n\n    fetchData();\n    return () => {\n      shouldIgnore = true;\n    };\n  }, []);\n  useEffect(() => {\n    function correctPage() {\n      if (currentPage > 1 && filteredBooks.length === pageSize * currentPage - pageSize) setCurrentPage(currentPage => currentPage - 1);\n    }\n\n    correctPage();\n  }, [books, currentPage, filteredBooks]);\n\n  async function handleDelete({\n    id\n  }) {\n    const originalBooks = books;\n    const updatedBooks = originalBooks.filter(book => book.id !== id);\n    setBooks(updatedBooks);\n\n    try {\n      await deleteBook(id);\n    } catch (ex) {\n      if (ex.response && ex.response.status === 404) {\n        toast.error(\"This book has already been removed.\");\n      }\n\n      setBooks(originalBooks);\n    }\n  }\n\n  function getFilteredBooks() {\n    return currentGenre && currentGenre.id ? books.filter(book => book.genre === currentGenre.name) : query ? books.filter(book => book.title.toLowerCase().startsWith(query)) : books;\n  }\n\n  function getSortedBooks(books) {\n    return _.orderBy(books, [sortColumn.path], [sortColumn.order]);\n  }\n\n  function getPagedData() {\n    const filteredBooks = getFilteredBooks();\n    const sortedBooks = getSortedBooks(filteredBooks);\n    return {\n      booksToRender: paginate(sortedBooks, currentPage, pageSize),\n      totalCount: filteredBooks.length\n    };\n  }\n\n  return React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(FilterMenu, {\n    items: genres,\n    currentItem: currentGenre,\n    handleClick: setCurrentGenre,\n    setCurrentPage: setCurrentPage,\n    setQuery: setQuery,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, user && React.createElement(NewButton, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }), React.createElement(Summary, {\n    count: totalCount,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }), React.createElement(SearchBar, {\n    query: query,\n    setQuery: setQuery,\n    setCurrentPage: setCurrentPage,\n    setCurrentGenre: setCurrentGenre,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }), React.createElement(BooksTable, {\n    books: booksToRender,\n    sortColumn: sortColumn,\n    setSortColumn: setSortColumn,\n    handleDelete: handleDelete,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }), React.createElement(Pagination, {\n    pageSize: pageSize,\n    itemsAmount: totalCount,\n    currentPage: currentPage,\n    setCurrentPage: setCurrentPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  })));\n};\n\nexport default Books;","map":{"version":3,"sources":["/home/balaclava/Desktop/Javascript/react/100daysCode/01-Book_system/front_book_repo/src/components/books.jsx"],"names":["React","useState","useEffect","_","Redirect","BooksTable","FilterMenu","NewButton","Pagination","SearchBar","Summary","getBooks","deleteBook","getGenres","paginate","toast","Books","user","books","setBooks","currentGenre","setCurrentGenre","currentPage","setCurrentPage","genres","setGenres","query","setQuery","path","order","sortColumn","setSortColumn","pageSize","getPagedData","booksToRender","totalCount","filteredBooks","getFilteredBooks","shouldIgnore","fetchData","name","ex","console","log","response","status","correctPage","length","handleDelete","id","originalBooks","updatedBooks","filter","book","error","genre","title","toLowerCase","startsWith","getSortedBooks","orderBy","sortedBooks"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport _ from \"lodash\";\nimport { Redirect } from \"react-router-dom\";\n\nimport BooksTable from \"./booksTable\";\nimport FilterMenu from \"./common/filterMenu\";\nimport NewButton from \"./common/newButton\";\nimport Pagination from \"./common/pagination\";\nimport SearchBar from \"./common/searchBar\";\nimport Summary from \"./summary\";\n\nimport { getBooks, deleteBook } from \"../services/booksService\";\nimport { getGenres } from \"../services/genresService\";\nimport { paginate } from \"../utils/paginate\";\nimport { toast } from \"react-toastify\";\n\nconst Books = ({ user }) => {\n  const [books, setBooks] = useState([]);\n  const [currentGenre, setCurrentGenre] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const [genres, setGenres] = useState([]);\n  const [query, setQuery] = useState(\"\");\n  const [sortColumn, setSortColumn] = useState({\n    path: \"title\",\n    order: \"asc\"\n  });\n\n  const pageSize = 4;\n  const { booksToRender, totalCount } = getPagedData();\n  const filteredBooks = getFilteredBooks();\n\n  useEffect(() => {\n    let shouldIgnore = false;\n    async function fetchData() {\n      try {\n        const genres = await getGenres();\n        if (!shouldIgnore) {\n          setGenres([{ name: \"All Genres\" }, ...genres]);\n        }\n        const books = await getBooks();\n        if (!shouldIgnore) {\n          setBooks(books);\n        }\n      } catch (ex) {\n        console.log(\"into catch\");\n        if (ex.response.status === 401) {\n          //          toast.error(\"Your session may have expired, please login again\");\n          return <Redirect to=\"/logout\" />;\n        }\n      }\n    }\n    fetchData();\n    return () => {\n      shouldIgnore = true;\n    };\n  }, []);\n\n  useEffect(() => {\n    function correctPage() {\n      if (\n        currentPage > 1 &&\n        filteredBooks.length === pageSize * currentPage - pageSize\n      )\n        setCurrentPage(currentPage => currentPage - 1);\n    }\n    correctPage();\n  }, [books, currentPage, filteredBooks]);\n\n  async function handleDelete({ id }) {\n    const originalBooks = books;\n    const updatedBooks = originalBooks.filter(book => book.id !== id);\n    setBooks(updatedBooks);\n\n    try {\n      await deleteBook(id);\n    } catch (ex) {\n      if (ex.response && ex.response.status === 404) {\n        toast.error(\"This book has already been removed.\");\n      }\n      setBooks(originalBooks);\n    }\n  }\n\n  function getFilteredBooks() {\n    return currentGenre && currentGenre.id\n      ? books.filter(book => book.genre === currentGenre.name)\n      : query\n      ? books.filter(book => book.title.toLowerCase().startsWith(query))\n      : books;\n  }\n\n  function getSortedBooks(books) {\n    return _.orderBy(books, [sortColumn.path], [sortColumn.order]);\n  }\n\n  function getPagedData() {\n    const filteredBooks = getFilteredBooks();\n    const sortedBooks = getSortedBooks(filteredBooks);\n    return {\n      booksToRender: paginate(sortedBooks, currentPage, pageSize),\n      totalCount: filteredBooks.length\n    };\n  }\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-2\">\n        <FilterMenu\n          items={genres}\n          currentItem={currentGenre}\n          handleClick={setCurrentGenre}\n          setCurrentPage={setCurrentPage}\n          setQuery={setQuery}\n        />\n      </div>\n      <div className=\"col\">\n        {user && <NewButton />}\n        <Summary count={totalCount} />\n        <SearchBar\n          query={query}\n          setQuery={setQuery}\n          setCurrentPage={setCurrentPage}\n          setCurrentGenre={setCurrentGenre}\n        />\n        <BooksTable\n          books={booksToRender}\n          sortColumn={sortColumn}\n          setSortColumn={setSortColumn}\n          handleDelete={handleDelete}\n        />\n        <Pagination\n          pageSize={pageSize}\n          itemsAmount={totalCount}\n          currentPage={currentPage}\n          setCurrentPage={setCurrentPage}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Books;\n"]},"metadata":{},"sourceType":"module"}