{"ast":null,"code":"import _objectSpread from \"/home/balaclava/Desktop/Javascript/react/100daysCode/01-Book_system/front_book_repo/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/balaclava/Desktop/Javascript/react/100daysCode/01-Book_system/front_book_repo/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/balaclava/Desktop/Javascript/react/100daysCode/01-Book_system/front_book_repo/src/components/bookForm.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport Joi from \"joi-browser\";\nimport { getBook, updateBook, saveBook } from \"../services/booksService\";\nimport { getGenres } from \"../services/genresService\";\nimport Input from \"./common/input\";\nimport Select from \"./common/select\";\n\nconst BookForm = ({\n  match: item\n}) => {\n  const _useState = useState({\n    title: \"\",\n    author_first_name: \"\",\n    author_second_name: \"\",\n    rate: \"\",\n    genre: \"\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        book = _useState2[0],\n        setBook = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        genres = _useState4[0],\n        setGenres = _useState4[1];\n\n  const _useState5 = useState({}),\n        _useState6 = _slicedToArray(_useState5, 2),\n        errors = _useState6[0],\n        setErrors = _useState6[1];\n\n  const urlId = item.params.id;\n  const isNew = urlId === \"new\" ? true : false;\n  useEffect(() => {\n    let shouldIgnore = false;\n\n    async function fetchGenres() {\n      const genres = await getGenres();\n      if (!shouldIgnore) setGenres(genres);\n    }\n\n    async function fetchBook() {\n      const book = await getBook(urlId);\n      if (!shouldIgnore) setBook(mapToState(book));\n    }\n\n    fetchGenres();\n    if (!isNew) fetchBook();\n    return () => {\n      shouldIgnore = true;\n    };\n  }, [item, isNew, urlId]);\n\n  function mapToState(book) {\n    return {\n      id: book.id,\n      title: book.title,\n      author_first_name: book.author_first_name,\n      author_second_name: book.author_second_name,\n      rate: book.rate,\n      genre: book.genre\n    };\n  }\n\n  const schema = {\n    id: Joi.number(),\n    title: Joi.string().required(),\n    author_first_name: Joi.string().allow(\"\"),\n    author_second_name: Joi.string().allow(\"\"),\n    rate: Joi.number().min(1).max(10).required(),\n    genre: Joi.string().required()\n  };\n\n  function mapToFetchApi() {\n    const genreId = genres.filter(genre => genre.name === book.genre).map(genre => genre.id)[0];\n    return _objectSpread({}, book, {\n      genre: genreId\n    });\n  }\n\n  function validate() {\n    const options = {\n      abortEarly: false\n    };\n\n    const _Joi$validate = Joi.validate(book, schema, options),\n          error = _Joi$validate.error;\n\n    if (!error) return null;\n    const errors = {};\n\n    for (let item of error.details) errors[item.path[0]] = item.message;\n\n    return errors;\n  }\n\n  function validateProperty({\n    name,\n    value\n  }) {\n    const obj = {\n      [name]: value\n    };\n    const propertySchema = {\n      [name]: schema[name]\n    };\n\n    const _Joi$validate2 = Joi.validate(obj, propertySchema),\n          error = _Joi$validate2.error;\n\n    return error ? error.details[0].message : null;\n  }\n\n  function handleChange({\n    currentTarget: input\n  }) {\n    const allErrors = errors;\n    const errorMessage = validateProperty(input);\n    if (errorMessage) allErrors[input.name] = errorMessage;else delete allErrors[input.name];\n    setErrors(allErrors);\n    setBook(_objectSpread({}, book, {\n      [input.name]: input.value\n    }));\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    const errors = validate();\n    setErrors(errors || {});\n    if (errors) return;\n    doSubmit();\n  }\n\n  function doSubmit() {\n    console.log(\"into doSubmit\");\n    const mappedBook = mapToFetchApi();\n    if (!isNew) updateBook(book.id, mappedBook);else saveBook(mappedBook);\n  }\n\n  function renderInput(name, label, type = \"text\") {\n    return React.createElement(Input, {\n      name: name,\n      label: label,\n      type: type,\n      item: book,\n      setItem: setBook,\n      handleChange: handleChange,\n      error: errors[name],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    });\n  }\n\n  function renderSelect(name, label) {\n    return React.createElement(Select, {\n      name: name,\n      label: label,\n      options: genres,\n      item: book,\n      setItem: setBook,\n      handleChange: handleChange,\n      error: errors[name],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    });\n  }\n\n  console.log(errors.length ? true : false);\n\n  function renderButton(label) {\n    const disabled = errors ? true : false;\n    return React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      disabled: disabled,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, label);\n  }\n\n  return React.createElement(\"form\", {\n    onSubmit: e => handleSubmit(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, renderInput(\"title\", \"Title\"), renderInput(\"rate\", \"Rate\"), renderInput(\"author_first_name\", \"Name\"), renderInput(\"author_second_name\", \"Second name\"), renderSelect(\"genre\", \"Genre\"), renderButton(\"save\"));\n};\n\nexport default BookForm;","map":{"version":3,"sources":["/home/balaclava/Desktop/Javascript/react/100daysCode/01-Book_system/front_book_repo/src/components/bookForm.jsx"],"names":["React","useEffect","useState","Joi","getBook","updateBook","saveBook","getGenres","Input","Select","BookForm","match","item","title","author_first_name","author_second_name","rate","genre","book","setBook","genres","setGenres","errors","setErrors","urlId","params","id","isNew","shouldIgnore","fetchGenres","fetchBook","mapToState","schema","number","string","required","allow","min","max","mapToFetchApi","genreId","filter","name","map","validate","options","abortEarly","error","details","path","message","validateProperty","value","obj","propertySchema","handleChange","currentTarget","input","allErrors","errorMessage","handleSubmit","e","preventDefault","doSubmit","console","log","mappedBook","renderInput","label","type","renderSelect","length","renderButton","disabled"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Joi from \"joi-browser\";\n\nimport { getBook, updateBook, saveBook } from \"../services/booksService\";\nimport { getGenres } from \"../services/genresService\";\nimport Input from \"./common/input\";\nimport Select from \"./common/select\";\n\nconst BookForm = ({ match: item }) => {\n  const [book, setBook] = useState({\n    title: \"\",\n    author_first_name: \"\",\n    author_second_name: \"\",\n    rate: \"\",\n    genre: \"\"\n  });\n  const [genres, setGenres] = useState([]);\n  const [errors, setErrors] = useState({});\n  const urlId = item.params.id;\n  const isNew = urlId === \"new\" ? true : false;\n\n  useEffect(() => {\n    let shouldIgnore = false;\n\n    async function fetchGenres() {\n      const genres = await getGenres();\n      if (!shouldIgnore) setGenres(genres);\n    }\n\n    async function fetchBook() {\n      const book = await getBook(urlId);\n      if (!shouldIgnore) setBook(mapToState(book));\n    }\n    fetchGenres();\n    if (!isNew) fetchBook();\n    return () => {\n      shouldIgnore = true;\n    };\n  }, [item, isNew, urlId]);\n\n  function mapToState(book) {\n    return {\n      id: book.id,\n      title: book.title,\n      author_first_name: book.author_first_name,\n      author_second_name: book.author_second_name,\n      rate: book.rate,\n      genre: book.genre\n    };\n  }\n\n  const schema = {\n    id: Joi.number(),\n    title: Joi.string().required(),\n    author_first_name: Joi.string().allow(\"\"),\n    author_second_name: Joi.string().allow(\"\"),\n    rate: Joi.number()\n      .min(1)\n      .max(10)\n      .required(),\n    genre: Joi.string().required()\n  };\n\n  function mapToFetchApi() {\n    const genreId = genres\n      .filter(genre => genre.name === book.genre)\n      .map(genre => genre.id)[0];\n    return { ...book, genre: genreId };\n  }\n\n  function validate() {\n    const options = { abortEarly: false };\n    const { error } = Joi.validate(book, schema, options);\n    if (!error) return null;\n\n    const errors = {};\n    for (let item of error.details) errors[item.path[0]] = item.message;\n    return errors;\n  }\n\n  function validateProperty({ name, value }) {\n    const obj = { [name]: value };\n    const propertySchema = { [name]: schema[name] };\n    const { error } = Joi.validate(obj, propertySchema);\n\n    return error ? error.details[0].message : null;\n  }\n\n  function handleChange({ currentTarget: input }) {\n    const allErrors = errors;\n    const errorMessage = validateProperty(input);\n    if (errorMessage) allErrors[input.name] = errorMessage;\n    else delete allErrors[input.name];\n\n    setErrors(allErrors);\n    setBook({ ...book, [input.name]: input.value });\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    const errors = validate();\n    setErrors(errors || {});\n    if (errors) return;\n\n    doSubmit();\n  }\n\n  function doSubmit() {\n    console.log(\"into doSubmit\");\n    const mappedBook = mapToFetchApi();\n    if (!isNew) updateBook(book.id, mappedBook);\n    else saveBook(mappedBook);\n  }\n\n  function renderInput(name, label, type = \"text\") {\n    return (\n      <Input\n        name={name}\n        label={label}\n        type={type}\n        item={book}\n        setItem={setBook}\n        handleChange={handleChange}\n        error={errors[name]}\n      />\n    );\n  }\n\n  function renderSelect(name, label) {\n    return (\n      <Select\n        name={name}\n        label={label}\n        options={genres}\n        item={book}\n        setItem={setBook}\n        handleChange={handleChange}\n        error={errors[name]}\n      />\n    );\n  }\n\n  console.log(errors.length ? true : false);\n\n  function renderButton(label) {\n    const disabled = errors ? true : false;\n\n    return (\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={disabled}>\n        {label}\n      </button>\n    );\n  }\n\n  return (\n    <form onSubmit={e => handleSubmit(e)}>\n      {renderInput(\"title\", \"Title\")}\n      {renderInput(\"rate\", \"Rate\")}\n      {renderInput(\"author_first_name\", \"Name\")}\n      {renderInput(\"author_second_name\", \"Second name\")}\n      {renderSelect(\"genre\", \"Genre\")}\n      {renderButton(\"save\")}\n    </form>\n  );\n};\n\nexport default BookForm;\n"]},"metadata":{},"sourceType":"module"}