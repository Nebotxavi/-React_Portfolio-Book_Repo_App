{"ast":null,"code":"import _objectSpread from \"/home/balaclava/Desktop/Javascript/react/100daysCode/01-Book_system/front_book_repo/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/balaclava/Desktop/Javascript/react/100daysCode/01-Book_system/front_book_repo/src/components/common/form.jsx\";\nimport React, { useContext } from \"react\";\nimport Joi from \"joi-browser\";\nimport Input from \"./input\"; // import Select from \"./select\";\n\nimport { themeContext } from \"../registerForm\";\nexport function validate(data, schema) {\n  const options = {\n    abortEarly: false\n  };\n\n  const _Joi$validate = Joi.validate(data, schema, options),\n        error = _Joi$validate.error;\n\n  if (!error) return null;\n  const errors = {};\n\n  for (let item of error.details) errors[item.path[0]] = item.message;\n\n  return errors;\n}\nexport function validateProperty({\n  name,\n  value\n}, schema) {\n  const obj = {\n    [name]: value\n  };\n  const propertySchema = {\n    [name]: schema[name]\n  };\n\n  const _Joi$validate2 = Joi.validate(obj, propertySchema),\n        error = _Joi$validate2.error;\n\n  return error ? error.details[0].message : null;\n}\nexport function handleChange({\n  currentTarget: input\n}, errors, setErrors, data, setData, schema) {\n  const allErrors = errors;\n  const errorMessage = validateProperty(input, schema);\n  if (errorMessage) allErrors[input.name] = errorMessage;else delete allErrors[input.name];\n  setErrors(allErrors);\n  setData(_objectSpread({}, data, {\n    [input.name]: input.value\n  }));\n}\nexport function handleSubmit(e, setErrors, data, schema, doSubmit) {\n  e.preventDefault();\n  const errors = validate(data, schema);\n  setErrors(errors || {});\n  if (errors) return;\n  doSubmit();\n}\nexport function renderButton(label, data, schema) {\n  return React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    disabled: validate(data, schema),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, label);\n} //   export function renderSelect(name, label) {\n//     return (\n//       <Select\n//         name={name}\n//         label={label}\n//         options={genres}\n//         item={book}\n//         setItem={setBook}\n//         handleChange={handleChange}\n//         error={errors[name]}\n//       />\n//     );\n//   }\n\nexport function renderInput(name, label, data, setData, errors, setErrors, schema, type = \"text\") {\n  const context = useContext(themeContext);\n  console.log(context);\n  return React.createElement(Input, {\n    name: name,\n    label: label,\n    type: type,\n    item: data,\n    setItem: setData,\n    handleChange: e => handleChange(e, errors, setErrors, data, setData, schema),\n    error: errors[name],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  });\n}","map":{"version":3,"sources":["/home/balaclava/Desktop/Javascript/react/100daysCode/01-Book_system/front_book_repo/src/components/common/form.jsx"],"names":["React","useContext","Joi","Input","themeContext","validate","data","schema","options","abortEarly","error","errors","item","details","path","message","validateProperty","name","value","obj","propertySchema","handleChange","currentTarget","input","setErrors","setData","allErrors","errorMessage","handleSubmit","e","doSubmit","preventDefault","renderButton","label","renderInput","type","context","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,OAAOC,KAAP,MAAkB,SAAlB,C,CACA;;AACA,SAASC,YAAT,QAA6B,iBAA7B;AAEA,OAAO,SAASC,QAAT,CAAkBC,IAAlB,EAAwBC,MAAxB,EAAgC;AACrC,QAAMC,OAAO,GAAG;AAAEC,IAAAA,UAAU,EAAE;AAAd,GAAhB;;AADqC,wBAEnBP,GAAG,CAACG,QAAJ,CAAaC,IAAb,EAAmBC,MAAnB,EAA2BC,OAA3B,CAFmB;AAAA,QAE7BE,KAF6B,iBAE7BA,KAF6B;;AAGrC,MAAI,CAACA,KAAL,EAAY,OAAO,IAAP;AAEZ,QAAMC,MAAM,GAAG,EAAf;;AACA,OAAK,IAAIC,IAAT,IAAiBF,KAAK,CAACG,OAAvB,EAAgCF,MAAM,CAACC,IAAI,CAACE,IAAL,CAAU,CAAV,CAAD,CAAN,GAAuBF,IAAI,CAACG,OAA5B;;AAChC,SAAOJ,MAAP;AACD;AAED,OAAO,SAASK,gBAAT,CAA0B;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAA1B,EAA2CX,MAA3C,EAAmD;AACxD,QAAMY,GAAG,GAAG;AAAE,KAACF,IAAD,GAAQC;AAAV,GAAZ;AACA,QAAME,cAAc,GAAG;AAAE,KAACH,IAAD,GAAQV,MAAM,CAACU,IAAD;AAAhB,GAAvB;;AAFwD,yBAGtCf,GAAG,CAACG,QAAJ,CAAac,GAAb,EAAkBC,cAAlB,CAHsC;AAAA,QAGhDV,KAHgD,kBAGhDA,KAHgD;;AAKxD,SAAOA,KAAK,GAAGA,KAAK,CAACG,OAAN,CAAc,CAAd,EAAiBE,OAApB,GAA8B,IAA1C;AACD;AAED,OAAO,SAASM,YAAT,CACL;AAAEC,EAAAA,aAAa,EAAEC;AAAjB,CADK,EAELZ,MAFK,EAGLa,SAHK,EAILlB,IAJK,EAKLmB,OALK,EAMLlB,MANK,EAOL;AACA,QAAMmB,SAAS,GAAGf,MAAlB;AACA,QAAMgB,YAAY,GAAGX,gBAAgB,CAACO,KAAD,EAAQhB,MAAR,CAArC;AACA,MAAIoB,YAAJ,EAAkBD,SAAS,CAACH,KAAK,CAACN,IAAP,CAAT,GAAwBU,YAAxB,CAAlB,KACK,OAAOD,SAAS,CAACH,KAAK,CAACN,IAAP,CAAhB;AAELO,EAAAA,SAAS,CAACE,SAAD,CAAT;AACAD,EAAAA,OAAO,mBAAMnB,IAAN;AAAY,KAACiB,KAAK,CAACN,IAAP,GAAcM,KAAK,CAACL;AAAhC,KAAP;AACD;AAED,OAAO,SAASU,YAAT,CAAsBC,CAAtB,EAAyBL,SAAzB,EAAoClB,IAApC,EAA0CC,MAA1C,EAAkDuB,QAAlD,EAA4D;AACjED,EAAAA,CAAC,CAACE,cAAF;AAEA,QAAMpB,MAAM,GAAGN,QAAQ,CAACC,IAAD,EAAOC,MAAP,CAAvB;AACAiB,EAAAA,SAAS,CAACb,MAAM,IAAI,EAAX,CAAT;AACA,MAAIA,MAAJ,EAAY;AAEZmB,EAAAA,QAAQ;AACT;AAED,OAAO,SAASE,YAAT,CAAsBC,KAAtB,EAA6B3B,IAA7B,EAAmCC,MAAnC,EAA2C;AAChD,SACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,iBAFZ;AAGE,IAAA,QAAQ,EAAEF,QAAQ,CAACC,IAAD,EAAOC,MAAP,CAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKG0B,KALH,CADF;AASD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,WAAT,CACLjB,IADK,EAELgB,KAFK,EAGL3B,IAHK,EAILmB,OAJK,EAKLd,MALK,EAMLa,SANK,EAOLjB,MAPK,EAQL4B,IAAI,GAAG,MARF,EASL;AACA,QAAMC,OAAO,GAAGnC,UAAU,CAACG,YAAD,CAA1B;AACAiC,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,SACE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAEnB,IADR;AAEE,IAAA,KAAK,EAAEgB,KAFT;AAGE,IAAA,IAAI,EAAEE,IAHR;AAIE,IAAA,IAAI,EAAE7B,IAJR;AAKE,IAAA,OAAO,EAAEmB,OALX;AAME,IAAA,YAAY,EAAEI,CAAC,IACbR,YAAY,CAACQ,CAAD,EAAIlB,MAAJ,EAAYa,SAAZ,EAAuBlB,IAAvB,EAA6BmB,OAA7B,EAAsClB,MAAtC,CAPhB;AASE,IAAA,KAAK,EAAEI,MAAM,CAACM,IAAD,CATf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAaD","sourcesContent":["import React, { useContext } from \"react\";\nimport Joi from \"joi-browser\";\n\nimport Input from \"./input\";\n// import Select from \"./select\";\nimport { themeContext } from \"../registerForm\";\n\nexport function validate(data, schema) {\n  const options = { abortEarly: false };\n  const { error } = Joi.validate(data, schema, options);\n  if (!error) return null;\n\n  const errors = {};\n  for (let item of error.details) errors[item.path[0]] = item.message;\n  return errors;\n}\n\nexport function validateProperty({ name, value }, schema) {\n  const obj = { [name]: value };\n  const propertySchema = { [name]: schema[name] };\n  const { error } = Joi.validate(obj, propertySchema);\n\n  return error ? error.details[0].message : null;\n}\n\nexport function handleChange(\n  { currentTarget: input },\n  errors,\n  setErrors,\n  data,\n  setData,\n  schema\n) {\n  const allErrors = errors;\n  const errorMessage = validateProperty(input, schema);\n  if (errorMessage) allErrors[input.name] = errorMessage;\n  else delete allErrors[input.name];\n\n  setErrors(allErrors);\n  setData({ ...data, [input.name]: input.value });\n}\n\nexport function handleSubmit(e, setErrors, data, schema, doSubmit) {\n  e.preventDefault();\n\n  const errors = validate(data, schema);\n  setErrors(errors || {});\n  if (errors) return;\n\n  doSubmit();\n}\n\nexport function renderButton(label, data, schema) {\n  return (\n    <button\n      type=\"submit\"\n      className=\"btn btn-primary\"\n      disabled={validate(data, schema)}\n    >\n      {label}\n    </button>\n  );\n}\n\n//   export function renderSelect(name, label) {\n//     return (\n//       <Select\n//         name={name}\n//         label={label}\n//         options={genres}\n//         item={book}\n//         setItem={setBook}\n//         handleChange={handleChange}\n//         error={errors[name]}\n//       />\n//     );\n//   }\n\nexport function renderInput(\n  name,\n  label,\n  data,\n  setData,\n  errors,\n  setErrors,\n  schema,\n  type = \"text\"\n) {\n  const context = useContext(themeContext);\n  console.log(context);\n  return (\n    <Input\n      name={name}\n      label={label}\n      type={type}\n      item={data}\n      setItem={setData}\n      handleChange={e =>\n        handleChange(e, errors, setErrors, data, setData, schema)\n      }\n      error={errors[name]}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}