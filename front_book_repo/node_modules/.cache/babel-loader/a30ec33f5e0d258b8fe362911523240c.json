{"ast":null,"code":"import http from \"./httpService\";\nimport axios from \"axios\";\nimport jwtDecode from \"jwt-decode\";\nconst apiEndpoint = \"users/token/\";\nconst tokenKey = \"token\";\nhttp.setJwt(getJwt());\naxios.interceptors.request.use(response => {\n  refreshToken();\n});\nexport async function login({\n  username,\n  password\n}) {\n  const _ref = await http.post(apiEndpoint, {\n    username,\n    password\n  }),\n        token = _ref.data;\n\n  localStorage.setItem(tokenKey, token[tokenKey]);\n}\nexport async function refreshToken() {\n  if (!getJwt()) return;\n  const currentToken = getJwt();\n\n  const _ref2 = await http.post(apiEndpoint + \"refresh/\", {\n    token: currentToken\n  }),\n        token = _ref2.data;\n\n  localStorage.setItem(tokenKey, token[tokenKey]);\n}\nexport function logout() {\n  localStorage.removeItem(tokenKey);\n}\nexport function getJwt() {\n  const token = localStorage.getItem(tokenKey);\n  return token;\n}\nexport function getCurrentUser() {\n  try {\n    const token = getJwt();\n    const decodedToken = jwtDecode(token);\n    return decodedToken.username;\n  } catch (ex) {\n    return null;\n  }\n}","map":{"version":3,"sources":["/home/balaclava/Desktop/Javascript/react/100daysCode/01-Book_system/front_book_repo/src/services/authService.js"],"names":["http","axios","jwtDecode","apiEndpoint","tokenKey","setJwt","getJwt","interceptors","request","use","response","refreshToken","login","username","password","post","token","data","localStorage","setItem","currentToken","logout","removeItem","getItem","getCurrentUser","decodedToken","ex"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,eAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,MAAMC,WAAW,GAAG,cAApB;AACA,MAAMC,QAAQ,GAAG,OAAjB;AAEAJ,IAAI,CAACK,MAAL,CAAYC,MAAM,EAAlB;AAEAL,KAAK,CAACM,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAA+BC,QAAQ,IAAI;AACzCC,EAAAA,YAAY;AACb,CAFD;AAIA,OAAO,eAAeC,KAAf,CAAqB;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAArB,EAA6C;AAAA,eAC1B,MAAMd,IAAI,CAACe,IAAL,CAAUZ,WAAV,EAAuB;AACnDU,IAAAA,QADmD;AAEnDC,IAAAA;AAFmD,GAAvB,CADoB;AAAA,QACpCE,KADoC,QAC1CC,IAD0C;;AAKlDC,EAAAA,YAAY,CAACC,OAAb,CAAqBf,QAArB,EAA+BY,KAAK,CAACZ,QAAD,CAApC;AACD;AAED,OAAO,eAAeO,YAAf,GAA8B;AACnC,MAAI,CAACL,MAAM,EAAX,EAAe;AACf,QAAMc,YAAY,GAAGd,MAAM,EAA3B;;AAFmC,gBAGX,MAAMN,IAAI,CAACe,IAAL,CAAUZ,WAAW,GAAG,UAAxB,EAAoC;AAChEa,IAAAA,KAAK,EAAEI;AADyD,GAApC,CAHK;AAAA,QAGrBJ,KAHqB,SAG3BC,IAH2B;;AAMnCC,EAAAA,YAAY,CAACC,OAAb,CAAqBf,QAArB,EAA+BY,KAAK,CAACZ,QAAD,CAApC;AACD;AAED,OAAO,SAASiB,MAAT,GAAkB;AACvBH,EAAAA,YAAY,CAACI,UAAb,CAAwBlB,QAAxB;AACD;AAED,OAAO,SAASE,MAAT,GAAkB;AACvB,QAAMU,KAAK,GAAGE,YAAY,CAACK,OAAb,CAAqBnB,QAArB,CAAd;AACA,SAAOY,KAAP;AACD;AAED,OAAO,SAASQ,cAAT,GAA0B;AAC/B,MAAI;AACF,UAAMR,KAAK,GAAGV,MAAM,EAApB;AACA,UAAMmB,YAAY,GAAGvB,SAAS,CAACc,KAAD,CAA9B;AACA,WAAOS,YAAY,CAACZ,QAApB;AACD,GAJD,CAIE,OAAOa,EAAP,EAAW;AACX,WAAO,IAAP;AACD;AACF","sourcesContent":["import http from \"./httpService\";\nimport axios from \"axios\";\nimport jwtDecode from \"jwt-decode\";\n\nconst apiEndpoint = \"users/token/\";\nconst tokenKey = \"token\";\n\nhttp.setJwt(getJwt());\n\naxios.interceptors.request.use(response => {\n  refreshToken();\n});\n\nexport async function login({ username, password }) {\n  const { data: token } = await http.post(apiEndpoint, {\n    username,\n    password\n  });\n  localStorage.setItem(tokenKey, token[tokenKey]);\n}\n\nexport async function refreshToken() {\n  if (!getJwt()) return;\n  const currentToken = getJwt();\n  const { data: token } = await http.post(apiEndpoint + \"refresh/\", {\n    token: currentToken\n  });\n  localStorage.setItem(tokenKey, token[tokenKey]);\n}\n\nexport function logout() {\n  localStorage.removeItem(tokenKey);\n}\n\nexport function getJwt() {\n  const token = localStorage.getItem(tokenKey);\n  return token;\n}\n\nexport function getCurrentUser() {\n  try {\n    const token = getJwt();\n    const decodedToken = jwtDecode(token);\n    return decodedToken.username;\n  } catch (ex) {\n    return null;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}