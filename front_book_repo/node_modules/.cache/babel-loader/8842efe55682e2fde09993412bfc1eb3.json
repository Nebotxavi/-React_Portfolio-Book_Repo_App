{"ast":null,"code":"import _objectSpread from \"/home/balaclava/Desktop/Javascript/react/100daysCode/01-Book_system/front_book_repo/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/balaclava/Desktop/Javascript/react/100daysCode/01-Book_system/front_book_repo/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/balaclava/Desktop/Javascript/react/100daysCode/01-Book_system/front_book_repo/src/components/bookForm.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { getBook, updateBook, saveBook } from \"../services/booksService\";\nimport { getGenres } from \"../services/genresService\";\nimport Input from \"./common/input\";\n\nconst BookForm = ({\n  match: item\n}) => {\n  const _useState = useState({\n    title: \"\",\n    author_first_name: \"\",\n    author_second_name: \"\",\n    rate: \"\",\n    genre: \"\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        book = _useState2[0],\n        setBook = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        genres = _useState4[0],\n        setGenres = _useState4[1];\n\n  const urlId = item.params.id;\n  const isNew = urlId === \"new\" ? true : false;\n  useEffect(() => {\n    let shouldIgnore = false;\n\n    async function fetchGenres() {\n      const genres = await getGenres();\n      if (!shouldIgnore) setGenres(genres);\n    }\n\n    if (isNew) return;\n\n    async function fetchBook() {\n      const book = await getBook(urlId);\n      if (!shouldIgnore) setBook(mapToState(book));\n    }\n\n    fetchGenres();\n    fetchBook();\n    return () => {\n      shouldIgnore = true;\n    };\n  }, [item, isNew, urlId]);\n\n  function mapToState(book) {\n    return {\n      id: book.id,\n      title: book.title,\n      author_first_name: book.author_first_name,\n      author_second_name: book.author_second_name,\n      rate: book.rate,\n      genre: book.genre\n    };\n  }\n\n  function mapForAPICall() {\n    const genre = genres.filter(genre => genre.name === book.genre)[0];\n    return _objectSpread({}, book, {\n      genre: genre.id\n    });\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    const book = mapForAPICall();\n    if (isNew) saveBook(book);else updateBook(book.id, book);\n  }\n\n  function handleChange(e, name) {\n    setBook(_objectSpread({}, book, {\n      [name]: e.currentTarget.value\n    }));\n  }\n\n  function renderInput(name, label, type = \"text\") {\n    return React.createElement(Input, {\n      name: name,\n      label: label,\n      item: book,\n      handleChange: handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"form\", {\n    onSubmit: e => handleSubmit(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, renderInput(\"title\", \"Title\"), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"input-name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Author name\"), React.createElement(\"input\", {\n    id: \"input-name\",\n    type: \"text\",\n    className: \"form-control\",\n    value: book.author_first_name,\n    onChange: e => setBook(_objectSpread({}, book, {\n      author_first_name: e.currentTarget.value\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"input-rate\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"Rate\"), React.createElement(\"input\", {\n    id: \"input-rate\",\n    type: \"text\",\n    className: \"form-control\",\n    value: book.rate,\n    onChange: e => setBook(_objectSpread({}, book, {\n      rate: e.currentTarget.value\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"Save\"));\n};\n\nexport default BookForm;","map":{"version":3,"sources":["/home/balaclava/Desktop/Javascript/react/100daysCode/01-Book_system/front_book_repo/src/components/bookForm.jsx"],"names":["React","useEffect","useState","getBook","updateBook","saveBook","getGenres","Input","BookForm","match","item","title","author_first_name","author_second_name","rate","genre","book","setBook","genres","setGenres","urlId","params","id","isNew","shouldIgnore","fetchGenres","fetchBook","mapToState","mapForAPICall","filter","name","handleSubmit","e","preventDefault","handleChange","currentTarget","value","renderInput","label","type"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { getBook, updateBook, saveBook } from \"../services/booksService\";\nimport { getGenres } from \"../services/genresService\";\nimport Input from \"./common/input\";\n\nconst BookForm = ({ match: item }) => {\n  const [book, setBook] = useState({\n    title: \"\",\n    author_first_name: \"\",\n    author_second_name: \"\",\n    rate: \"\",\n    genre: \"\"\n  });\n  const [genres, setGenres] = useState([]);\n  const urlId = item.params.id;\n  const isNew = urlId === \"new\" ? true : false;\n\n  useEffect(() => {\n    let shouldIgnore = false;\n\n    async function fetchGenres() {\n      const genres = await getGenres();\n      if (!shouldIgnore) setGenres(genres);\n    }\n\n    if (isNew) return;\n\n    async function fetchBook() {\n      const book = await getBook(urlId);\n      if (!shouldIgnore) setBook(mapToState(book));\n    }\n    fetchGenres();\n    fetchBook();\n    return () => {\n      shouldIgnore = true;\n    };\n  }, [item, isNew, urlId]);\n\n  function mapToState(book) {\n    return {\n      id: book.id,\n      title: book.title,\n      author_first_name: book.author_first_name,\n      author_second_name: book.author_second_name,\n      rate: book.rate,\n      genre: book.genre\n    };\n  }\n\n  function mapForAPICall() {\n    const genre = genres.filter(genre => genre.name === book.genre)[0];\n    return { ...book, genre: genre.id };\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    const book = mapForAPICall();\n    if (isNew) saveBook(book);\n    else updateBook(book.id, book);\n  }\n\n  function handleChange(e, name) {\n    setBook({ ...book, [name]: e.currentTarget.value });\n  }\n\n  function renderInput(name, label, type = \"text\") {\n    return (\n      <Input\n        name={name}\n        label={label}\n        item={book}\n        handleChange={handleChange}\n      />\n    );\n  }\n\n  return (\n    <form onSubmit={e => handleSubmit(e)}>\n      {renderInput(\"title\", \"Title\")}\n      <div className=\"form-group\">\n        <label htmlFor=\"input-name\">Author name</label>\n        <input\n          id=\"input-name\"\n          type=\"text\"\n          className=\"form-control\"\n          value={book.author_first_name}\n          onChange={e =>\n            setBook({ ...book, author_first_name: e.currentTarget.value })\n          }\n        />\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"input-rate\">Rate</label>\n        <input\n          id=\"input-rate\"\n          type=\"text\"\n          className=\"form-control\"\n          value={book.rate}\n          onChange={e => setBook({ ...book, rate: e.currentTarget.value })}\n        />\n      </div>\n      <button type=\"submit\" className=\"btn btn-primary\">\n        Save\n      </button>\n    </form>\n  );\n};\n\nexport default BookForm;\n"]},"metadata":{},"sourceType":"module"}