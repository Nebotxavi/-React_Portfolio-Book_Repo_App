{"ast":null,"code":"import http from \"./httpService\";\nimport jwtDecode from \"jwt-decode\";\nconst apiEndpoint = \"users/token/\";\nconst tokenKey = \"token\";\nhttp.setJwt(getJwt());\nexport async function login({\n  username,\n  password\n}) {\n  const _ref = await http.post(apiEndpoint, {\n    username,\n    password\n  }),\n        token = _ref.data; // TRY (usename || email)\n\n\n  localStorage.setItem(tokenKey, token.access);\n}\nexport function logout() {\n  localStorage.removeItem(tokenKey);\n}\nexport function getJwt() {\n  const token = localStorage.getItem(tokenKey);\n  return token;\n}\nexport function getCurrentUser() {\n  const token = getJwt();\n  return token ? jwtDecode(token) : null;\n}","map":{"version":3,"sources":["/home/balaclava/Desktop/Javascript/react/100daysCode/01-Book_system/front_book_repo/src/services/authService.js"],"names":["http","jwtDecode","apiEndpoint","tokenKey","setJwt","getJwt","login","username","password","post","token","data","localStorage","setItem","access","logout","removeItem","getItem","getCurrentUser"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,eAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,MAAMC,WAAW,GAAG,cAApB;AACA,MAAMC,QAAQ,GAAG,OAAjB;AAEAH,IAAI,CAACI,MAAL,CAAYC,MAAM,EAAlB;AAEA,OAAO,eAAeC,KAAf,CAAqB;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAArB,EAA6C;AAAA,eAC1B,MAAMR,IAAI,CAACS,IAAL,CAAUP,WAAV,EAAuB;AACnDK,IAAAA,QADmD;AAEnDC,IAAAA;AAFmD,GAAvB,CADoB;AAAA,QACpCE,KADoC,QAC1CC,IAD0C,EAI9C;;;AACJC,EAAAA,YAAY,CAACC,OAAb,CAAqBV,QAArB,EAA+BO,KAAK,CAACI,MAArC;AACD;AAED,OAAO,SAASC,MAAT,GAAkB;AACvBH,EAAAA,YAAY,CAACI,UAAb,CAAwBb,QAAxB;AACD;AAED,OAAO,SAASE,MAAT,GAAkB;AACvB,QAAMK,KAAK,GAAGE,YAAY,CAACK,OAAb,CAAqBd,QAArB,CAAd;AACA,SAAOO,KAAP;AACD;AAED,OAAO,SAASQ,cAAT,GAA0B;AAC/B,QAAMR,KAAK,GAAGL,MAAM,EAApB;AACA,SAAOK,KAAK,GAAGT,SAAS,CAACS,KAAD,CAAZ,GAAsB,IAAlC;AACD","sourcesContent":["import http from \"./httpService\";\nimport jwtDecode from \"jwt-decode\";\n\nconst apiEndpoint = \"users/token/\";\nconst tokenKey = \"token\";\n\nhttp.setJwt(getJwt());\n\nexport async function login({ username, password }) {\n  const { data: token } = await http.post(apiEndpoint, {\n    username,\n    password\n  }); // TRY (usename || email)\n  localStorage.setItem(tokenKey, token.access);\n}\n\nexport function logout() {\n  localStorage.removeItem(tokenKey);\n}\n\nexport function getJwt() {\n  const token = localStorage.getItem(tokenKey);\n  return token;\n}\n\nexport function getCurrentUser() {\n  const token = getJwt();\n  return token ? jwtDecode(token) : null;\n}\n"]},"metadata":{},"sourceType":"module"}