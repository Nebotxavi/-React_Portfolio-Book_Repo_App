{"ast":null,"code":"import _slicedToArray from \"/home/balaclava/Desktop/Javascript/react/100daysCode/01-Book_system/front_book_repo/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/balaclava/Desktop/Javascript/react/100daysCode/01-Book_system/front_book_repo/src/components/registerForm.jsx\";\nimport React, { useState } from \"react\";\nimport Joi from \"joi-browser\";\nimport { renderInput } from \"./common/form\";\n\nconst RegisterForm = () => {\n  const _useState = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    passwordConfirmation: \"\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        user = _useState2[0],\n        setUser = _useState2[1];\n\n  const _useState3 = useState({}),\n        _useState4 = _slicedToArray(_useState3, 2),\n        errors = _useState4[0],\n        setErrors = _useState4[1];\n\n  const schema = {\n    username: Joi.string().required(),\n    email: Joi.string().allow(\"\"),\n    password: Joi.string().required(),\n    passwordConfirmation: Joi.ref(\"password\")\n  };\n  return React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, renderInput(\"username\", \"Username\", user, setUser, errors, setErrors, schema));\n};\n\nexport default RegisterForm;","map":{"version":3,"sources":["/home/balaclava/Desktop/Javascript/react/100daysCode/01-Book_system/front_book_repo/src/components/registerForm.jsx"],"names":["React","useState","Joi","renderInput","RegisterForm","username","email","password","passwordConfirmation","user","setUser","errors","setErrors","schema","string","required","allow","ref"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,SAASC,WAAT,QAA4B,eAA5B;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA,oBACDH,QAAQ,CAAC;AAC/BI,IAAAA,QAAQ,EAAE,EADqB;AAE/BC,IAAAA,KAAK,EAAE,EAFwB;AAG/BC,IAAAA,QAAQ,EAAE,EAHqB;AAI/BC,IAAAA,oBAAoB,EAAE;AAJS,GAAD,CADP;AAAA;AAAA,QAClBC,IADkB;AAAA,QACZC,OADY;;AAAA,qBAOGT,QAAQ,CAAC,EAAD,CAPX;AAAA;AAAA,QAOlBU,MAPkB;AAAA,QAOVC,SAPU;;AASzB,QAAMC,MAAM,GAAG;AACbR,IAAAA,QAAQ,EAAEH,GAAG,CAACY,MAAJ,GAAaC,QAAb,EADG;AAEbT,IAAAA,KAAK,EAAEJ,GAAG,CAACY,MAAJ,GAAaE,KAAb,CAAmB,EAAnB,CAFM;AAGbT,IAAAA,QAAQ,EAAEL,GAAG,CAACY,MAAJ,GAAaC,QAAb,EAHG;AAIbP,IAAAA,oBAAoB,EAAEN,GAAG,CAACe,GAAJ,CAAQ,UAAR;AAJT,GAAf;AAOA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGd,WAAW,CACV,UADU,EAEV,UAFU,EAGVM,IAHU,EAIVC,OAJU,EAKVC,MALU,EAMVC,SANU,EAOVC,MAPU,CADd,CADF;AAaD,CA7BD;;AA+BA,eAAeT,YAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Joi from \"joi-browser\";\n\nimport { renderInput } from \"./common/form\";\n\nconst RegisterForm = () => {\n  const [user, setUser] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    passwordConfirmation: \"\"\n  });\n  const [errors, setErrors] = useState({});\n\n  const schema = {\n    username: Joi.string().required(),\n    email: Joi.string().allow(\"\"),\n    password: Joi.string().required(),\n    passwordConfirmation: Joi.ref(\"password\")\n  };\n\n  return (\n    <form>\n      {renderInput(\n        \"username\",\n        \"Username\",\n        user,\n        setUser,\n        errors,\n        setErrors,\n        schema\n      )}\n    </form>\n  );\n};\n\nexport default RegisterForm;\n"]},"metadata":{},"sourceType":"module"}