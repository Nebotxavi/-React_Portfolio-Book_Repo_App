{"ast":null,"code":"import _objectSpread from \"/home/balaclava/Desktop/Javascript/react/100daysCode/01-Book_system/front_book_repo/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/balaclava/Desktop/Javascript/react/100daysCode/01-Book_system/front_book_repo/src/components/common/form.jsx\";\nimport React from \"react\";\nimport Joi from \"joi-browser\";\nimport Input from \"./input\";\nimport Select from \"./select\";\n\nconst Form = () => {\n  //   function validate() {\n  //     const options = { abortEarly: false };\n  //     const { error } = Joi.validate(data, schema, options);\n  //     if (!error) return null;\n  //     const errors = {};\n  //     for (let item of error.details) errors[item.path[0]] = item.message;\n  //     return errors;\n  //   }\n  function validateProperty({\n    name,\n    value\n  }, schema) {\n    const obj = {\n      [name]: value\n    };\n    const propertySchema = {\n      [name]: schema[name]\n    };\n\n    const _Joi$validate = Joi.validate(obj, propertySchema),\n          error = _Joi$validate.error;\n\n    return error ? error.details[0].message : null;\n  }\n\n  function handleChange({\n    currentTarget: input\n  }, errors, setErrors, data, setData, schema) {\n    const allErrors = errors;\n    const errorMessage = validateProperty(input, schema);\n    if (errorMessage) allErrors[input.name] = errorMessage;else delete allErrors[input.name];\n    setErrors(allErrors);\n    setData(_objectSpread({}, data, {\n      [input.name]: input.value\n    }));\n  } //   function handleSubmit(e) {\n  //     e.preventDefault();\n  //     const errors = validate();\n  //     setErrors(errors || {});\n  //     if (errors) return;\n  //   }\n  //   function renderButton(label) {\n  //     return (\n  //       <button type=\"submit\" className=\"btn btn-primary\" disabled={validate()}>\n  //         {label}\n  //       </button>\n  //     );\n  //   }\n  //   function renderSelect(name, label) {\n  //     return (\n  //       <Select\n  //         name={name}\n  //         label={label}\n  //         options={genres}\n  //         item={book}\n  //         setItem={setBook}\n  //         handleChange={handleChange}\n  //         error={errors[name]}\n  //       />\n  //     );\n  //   }\n\n\n  function renderInput(name, label, data, setData, errors, setErrors, schema, type = \"text\") {\n    return React.createElement(Input, {\n      name: name,\n      label: label,\n      type: type,\n      item: data,\n      setItem: setData,\n      handleChange: e => handleChange(e, errors, setErrors, data, setData, schema),\n      error: errors[name],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    });\n  }\n};\n\nexport default Form;","map":{"version":3,"sources":["/home/balaclava/Desktop/Javascript/react/100daysCode/01-Book_system/front_book_repo/src/components/common/form.jsx"],"names":["React","Joi","Input","Select","Form","validateProperty","name","value","schema","obj","propertySchema","validate","error","details","message","handleChange","currentTarget","input","errors","setErrors","data","setData","allErrors","errorMessage","renderInput","label","type","e"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA,WAASC,gBAAT,CAA0B;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAA1B,EAA2CC,MAA3C,EAAmD;AACjD,UAAMC,GAAG,GAAG;AAAE,OAACH,IAAD,GAAQC;AAAV,KAAZ;AACA,UAAMG,cAAc,GAAG;AAAE,OAACJ,IAAD,GAAQE,MAAM,CAACF,IAAD;AAAhB,KAAvB;;AAFiD,0BAG/BL,GAAG,CAACU,QAAJ,CAAaF,GAAb,EAAkBC,cAAlB,CAH+B;AAAA,UAGzCE,KAHyC,iBAGzCA,KAHyC;;AAKjD,WAAOA,KAAK,GAAGA,KAAK,CAACC,OAAN,CAAc,CAAd,EAAiBC,OAApB,GAA8B,IAA1C;AACD;;AAED,WAASC,YAAT,CACE;AAAEC,IAAAA,aAAa,EAAEC;AAAjB,GADF,EAEEC,MAFF,EAGEC,SAHF,EAIEC,IAJF,EAKEC,OALF,EAMEb,MANF,EAOE;AACA,UAAMc,SAAS,GAAGJ,MAAlB;AACA,UAAMK,YAAY,GAAGlB,gBAAgB,CAACY,KAAD,EAAQT,MAAR,CAArC;AACA,QAAIe,YAAJ,EAAkBD,SAAS,CAACL,KAAK,CAACX,IAAP,CAAT,GAAwBiB,YAAxB,CAAlB,KACK,OAAOD,SAAS,CAACL,KAAK,CAACX,IAAP,CAAhB;AAELa,IAAAA,SAAS,CAACG,SAAD,CAAT;AACAD,IAAAA,OAAO,mBAAMD,IAAN;AAAY,OAACH,KAAK,CAACX,IAAP,GAAcW,KAAK,CAACV;AAAhC,OAAP;AACD,GAlCgB,CAoCjB;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,WAASiB,WAAT,CACElB,IADF,EAEEmB,KAFF,EAGEL,IAHF,EAIEC,OAJF,EAKEH,MALF,EAMEC,SANF,EAOEX,MAPF,EAQEkB,IAAI,GAAG,MART,EASE;AACA,WACE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAEpB,IADR;AAEE,MAAA,KAAK,EAAEmB,KAFT;AAGE,MAAA,IAAI,EAAEC,IAHR;AAIE,MAAA,IAAI,EAAEN,IAJR;AAKE,MAAA,OAAO,EAAEC,OALX;AAME,MAAA,YAAY,EAAEM,CAAC,IACbZ,YAAY,CAACY,CAAD,EAAIT,MAAJ,EAAYC,SAAZ,EAAuBC,IAAvB,EAA6BC,OAA7B,EAAsCb,MAAtC,CAPhB;AASE,MAAA,KAAK,EAAEU,MAAM,CAACZ,IAAD,CATf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAaD;AACF,CA1FD;;AA4FA,eAAeF,IAAf","sourcesContent":["import React from \"react\";\nimport Joi from \"joi-browser\";\n\nimport Input from \"./input\";\nimport Select from \"./select\";\n\nconst Form = () => {\n  //   function validate() {\n  //     const options = { abortEarly: false };\n  //     const { error } = Joi.validate(data, schema, options);\n  //     if (!error) return null;\n\n  //     const errors = {};\n  //     for (let item of error.details) errors[item.path[0]] = item.message;\n  //     return errors;\n  //   }\n\n  function validateProperty({ name, value }, schema) {\n    const obj = { [name]: value };\n    const propertySchema = { [name]: schema[name] };\n    const { error } = Joi.validate(obj, propertySchema);\n\n    return error ? error.details[0].message : null;\n  }\n\n  function handleChange(\n    { currentTarget: input },\n    errors,\n    setErrors,\n    data,\n    setData,\n    schema\n  ) {\n    const allErrors = errors;\n    const errorMessage = validateProperty(input, schema);\n    if (errorMessage) allErrors[input.name] = errorMessage;\n    else delete allErrors[input.name];\n\n    setErrors(allErrors);\n    setData({ ...data, [input.name]: input.value });\n  }\n\n  //   function handleSubmit(e) {\n  //     e.preventDefault();\n\n  //     const errors = validate();\n  //     setErrors(errors || {});\n  //     if (errors) return;\n  //   }\n\n  //   function renderButton(label) {\n  //     return (\n  //       <button type=\"submit\" className=\"btn btn-primary\" disabled={validate()}>\n  //         {label}\n  //       </button>\n  //     );\n  //   }\n\n  //   function renderSelect(name, label) {\n  //     return (\n  //       <Select\n  //         name={name}\n  //         label={label}\n  //         options={genres}\n  //         item={book}\n  //         setItem={setBook}\n  //         handleChange={handleChange}\n  //         error={errors[name]}\n  //       />\n  //     );\n  //   }\n\n  function renderInput(\n    name,\n    label,\n    data,\n    setData,\n    errors,\n    setErrors,\n    schema,\n    type = \"text\"\n  ) {\n    return (\n      <Input\n        name={name}\n        label={label}\n        type={type}\n        item={data}\n        setItem={setData}\n        handleChange={e =>\n          handleChange(e, errors, setErrors, data, setData, schema)\n        }\n        error={errors[name]}\n      />\n    );\n  }\n};\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}