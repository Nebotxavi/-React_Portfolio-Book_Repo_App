{"ast":null,"code":"var _jsxFileName = \"/home/balaclava/Desktop/Javascript/react/100daysCode/01-Book_system/front_book_repo/src/components/common/tableBody.jsx\";\nimport React from \"react\";\n\nconst TableBody = ({\n  items,\n  columns\n}) => {\n  function renderCell(item, column) {\n    return item[column.path] ? item[column.path] : item[column.key];\n  }\n\n  return React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, items.map((item, ind) => {\n    return React.createElement(\"tr\", {\n      key: ind,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, columns.map(column => React.createElement(\"td\", {\n      key: item.id + (column.path || column.key),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, renderCell(item, column))));\n  }));\n};\n\nexport default TableBody;","map":{"version":3,"sources":["/home/balaclava/Desktop/Javascript/react/100daysCode/01-Book_system/front_book_repo/src/components/common/tableBody.jsx"],"names":["React","TableBody","items","columns","renderCell","item","column","path","key","map","ind","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAwB;AACxC,WAASC,UAAT,CAAoBC,IAApB,EAA0BC,MAA1B,EAAkC;AAChC,WAAOD,IAAI,CAACC,MAAM,CAACC,IAAR,CAAJ,GAAoBF,IAAI,CAACC,MAAM,CAACC,IAAR,CAAxB,GAAwCF,IAAI,CAACC,MAAM,CAACE,GAAR,CAAnD;AACD;;AAED,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,KAAK,CAACO,GAAN,CAAU,CAACJ,IAAD,EAAOK,GAAP,KAAe;AACxB,WACE;AAAI,MAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGP,OAAO,CAACM,GAAR,CAAYH,MAAM,IACjB;AAAI,MAAA,GAAG,EAAED,IAAI,CAACM,EAAL,IAAWL,MAAM,CAACC,IAAP,IAAeD,MAAM,CAACE,GAAjC,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGJ,UAAU,CAACC,IAAD,EAAOC,MAAP,CADb,CADD,CADH,CADF;AAcD,GAfA,CADH,CADF;AAoBD,CAzBD;;AA2BA,eAAeL,SAAf","sourcesContent":["import React from \"react\";\n\nconst TableBody = ({ items, columns }) => {\n  function renderCell(item, column) {\n    return item[column.path] ? item[column.path] : item[column.key];\n  }\n\n  return (\n    <tbody>\n      {items.map((item, ind) => {\n        return (\n          <tr key={ind}>\n            {columns.map(column => (\n              <td key={item.id + (column.path || column.key)}>\n                {renderCell(item, column)}\n              </td>\n            ))}\n            {/* <td>{item.title}</td>\n            <td>{item.author_first_name}</td>\n            <td>{item.author_second_name}</td>\n            <td>{item.genre}</td>\n            <td>{item.rate}</td> */}\n          </tr>\n        );\n      })}\n    </tbody>\n  );\n};\n\nexport default TableBody;\n"]},"metadata":{},"sourceType":"module"}